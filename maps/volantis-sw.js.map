{"version":3,"sources":["volantis-sw.js"],"names":["ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","i","_toPrimitive","_typeof","Symbol","toPrimitive","call","TypeError","String","Number","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","Array","isArray","_arrayLikeToArray","iterator","constructor","prototype","_toArray","_arrayWithHoles","_nonIterableRest","a","toString","slice","name","from","test","n","_regeneratorRuntime","hasOwnProperty","c","asyncIterator","u","toStringTag","define","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","this","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","mark","setPrototypeOf","__proto__","awrap","async","Promise","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","_next","_throw","prefix","cacheSuffixVersion","CACHE_NAME","PreCachlist","NPMMirror","NPMPackage","NPMPackageVersion","debug","handleFetch","_ref","_callee","event","url","_context","request","NetworkOnly","CacheFirst","CacheAlways","_x","cdn","gh","jsdelivr","fastly","gcore","testingcf","test1","combine","npm","unpkg","eleme","cdnjs","baomitu","bootcdn","bytedance","sustech","cdn_match_list","key","_console","console","color","black","red","green","yellow","blue","magenta","cyan","white","add","fi","_ref3","undefined","first","other","concat","createlog","util","fun","log","_len","args","_key2","creategroup","groupCollapsed","_len2","_key3","colorUtils","bold","str","colorHash","wait","error","warn","ready","info","createChalk","_len3","_key5","strArr","firstToUpperCase","createChalkBg","_len4","_key6","createChalkGroup","_len5","_key7","chalk","group","end","groupEnd","bg","toLowerCase","replace","L","toUpperCase","self","logger","generate_uuid","Math","random","db","read","config","reject","caches","open","cache","match","Request","encodeURIComponent","res","text","write","put","Response","compareVersion","b","v1","split","v2","len","max","num1","parseInt","num2","mirrors","getLocalVersion","_ref4","_callee2","_context2","t0","mirror_time","setNewestVersion","_ref5","_callee4","_context4","fetch","FetchEngine","json","_ref6","_callee3","_context3","version","t1","t2","t3","_x2","stack","setInterval","_callee5","_context5","setTimeout","_callee6","_context6","installFunction","_ref9","_callee8","_context8","_ref10","_callee7","index","_context7","response","_x3","addEventListener","_ref11","_callee9","_context9","skipWaiting","waitUntil","_x4","_ref12","_callee10","_context10","all","map","includes","clients","claim","_x5","_ref13","_callee11","_context11","respondWith","_x6","_ref14","_callee12","_context12","URL","pathname","_x7","_ref15","_callee13","_context13","resp","CacheRuntime","_x8","_ref16","_callee14","_context14","_x9","matchCache","_ref17","_callee15","_context15","_x10","_x11","_CacheRuntime","_callee18","_context18","matchCDN","protocol","clone","_ref18","_callee16","req","nav","_ref19","saveData","effectiveType","urls","urlObj","pathType","pathTestRes","_key8","_i","_cdn_match_list","item","_type","_key9","_url","ext","contentType","_context16","navigator","connection","mozConnection","webkitConnection","RegExp","location","origin","fullPath","exec","getContentType","arrayBuffer","buffer","headers","_x12","endsWith","list","indexOf","progress","_x13","_progress","_callee19","_context19","status","createPromiseAny","any","promises","errs","AggregateError","err","fetchAny","reqs","controller","AbortController","signal","abort","fetchParallel","abortEvent","Event","eventTarget","EventTarget","_ref20","_callee17","tagged","_context17","dispatchEvent","_x14"],"mappings":"AAAA,aAEA,SAASA,QAAQC,EAAGC,GAAK,IAAIC,EAAIC,OAAOC,KAAKJ,GAAI,GAAIG,OAAOE,sBAAuB,CAAE,IAAIC,EAAIH,OAAOE,sBAAsBL,GAAIC,IAAMK,EAAIA,EAAEC,QAAO,SAAUN,GAAK,OAAOE,OAAOK,yBAAyBR,EAAGC,GAAGQ,UAAY,KAAKP,EAAEQ,KAAKC,MAAMT,EAAGI,EAAI,CAAE,OAAOJ,CAAG,CAC9P,SAASU,cAAcZ,GAAK,IAAK,IAAIC,EAAI,EAAGA,EAAIY,UAAUC,OAAQb,IAAK,CAAE,IAAIC,EAAI,MAAQW,UAAUZ,GAAKY,UAAUZ,GAAK,CAAC,EAAGA,EAAI,EAAIF,QAAQI,OAAOD,IAAI,GAAIa,SAAQ,SAAUd,GAAKe,gBAAgBhB,EAAGC,EAAGC,EAAED,GAAK,IAAKE,OAAOc,0BAA4Bd,OAAOe,iBAAiBlB,EAAGG,OAAOc,0BAA0Bf,IAAMH,QAAQI,OAAOD,IAAIa,SAAQ,SAAUd,GAAKE,OAAOgB,eAAenB,EAAGC,EAAGE,OAAOK,yBAAyBN,EAAGD,GAAK,GAAI,CAAE,OAAOD,CAAG,CACtb,SAASgB,gBAAgBhB,EAAGC,EAAGC,GAAK,OAAQD,EAAImB,eAAenB,MAAOD,EAAIG,OAAOgB,eAAenB,EAAGC,EAAG,CAAEoB,MAAOnB,EAAGO,YAAY,EAAIa,cAAc,EAAIC,UAAU,IAAQvB,EAAEC,GAAKC,EAAGF,CAAG,CACnL,SAASoB,eAAelB,GAAK,IAAIsB,EAAIC,aAAavB,EAAG,UAAW,MAAO,UAAYwB,QAAQF,GAAKA,EAAIA,EAAI,EAAI,CAC5G,SAASC,aAAavB,EAAGD,GAAK,GAAI,UAAYyB,QAAQxB,KAAOA,EAAG,OAAOA,EAAG,IAAIF,EAAIE,EAAEyB,OAAOC,aAAc,QAAI,IAAW5B,EAAG,CAAE,IAAIwB,EAAIxB,EAAE6B,KAAK3B,EAAGD,GAAK,WAAY,GAAI,UAAYyB,QAAQF,GAAI,OAAOA,EAAG,MAAM,IAAIM,UAAU,+CAAiD,CAAE,OAAQ,WAAa7B,EAAI8B,OAASC,QAAQ9B,EAAI,CAC3T,SAAS+B,mBAAmBhC,GAAK,OAAOiC,mBAAmBjC,IAAMkC,iBAAiBlC,IAAMmC,4BAA4BnC,IAAMoC,oBAAsB,CAChJ,SAASA,qBAAuB,MAAM,IAAIP,UAAU,uIAAyI,CAC7L,SAASI,mBAAmBjC,GAAK,GAAIqC,MAAMC,QAAQtC,GAAI,OAAOuC,kBAAkBvC,EAAI,CACpF,SAASyB,QAAQpB,GAAgC,OAAOoB,QAAU,mBAAqBC,QAAU,iBAAmBA,OAAOc,SAAW,SAAUnC,GAAK,cAAcA,CAAG,EAAI,SAAUA,GAAK,OAAOA,GAAK,mBAAqBqB,QAAUrB,EAAEoC,cAAgBf,QAAUrB,IAAMqB,OAAOgB,UAAY,gBAAkBrC,CAAG,EAAGoB,QAAQpB,EAAI,CAC7T,SAASsC,SAAS3C,GAAK,OAAO4C,gBAAgB5C,IAAMkC,iBAAiBlC,IAAMmC,4BAA4BnC,IAAM6C,kBAAoB,CACjI,SAASA,mBAAqB,MAAM,IAAIhB,UAAU,4IAA8I,CAChM,SAASM,4BAA4BnC,EAAG8C,GAAK,GAAI9C,EAAG,CAAE,GAAI,iBAAmBA,EAAG,OAAOuC,kBAAkBvC,EAAG8C,GAAI,IAAI7C,EAAI,CAAC,EAAE8C,SAASnB,KAAK5B,GAAGgD,MAAM,GAAI,GAAI,MAAO,WAAa/C,GAAKD,EAAEyC,cAAgBxC,EAAID,EAAEyC,YAAYQ,MAAO,QAAUhD,GAAK,QAAUA,EAAIoC,MAAMa,KAAKlD,GAAK,cAAgBC,GAAK,2CAA2CkD,KAAKlD,GAAKsC,kBAAkBvC,EAAG8C,QAAK,CAAQ,CAAE,CACzX,SAASP,kBAAkBvC,EAAG8C,IAAM,MAAQA,GAAKA,EAAI9C,EAAEa,UAAYiC,EAAI9C,EAAEa,QAAS,IAAK,IAAId,EAAI,EAAGqD,EAAIf,MAAMS,GAAI/C,EAAI+C,EAAG/C,IAAKqD,EAAErD,GAAKC,EAAED,GAAI,OAAOqD,CAAG,CACnJ,SAASlB,iBAAiBlC,GAAK,GAAI,oBAAsB0B,QAAU,MAAQ1B,EAAE0B,OAAOc,WAAa,MAAQxC,EAAE,cAAe,OAAOqC,MAAMa,KAAKlD,EAAI,CAChJ,SAAS4C,gBAAgB5C,GAAK,GAAIqC,MAAMC,QAAQtC,GAAI,OAAOA,CAAG,CAC9D,SAASqD,sBAhBTA,oBAAA,WAAA,OAAAtD,CAAA,EAAA,IAAAE,EAAAF,EAAA,CAAA,EAAAC,EAAAE,OAAAwC,UAAAU,EAAApD,EAAAsD,eAAAjD,EAAAH,OAAAgB,gBAAA,SAAAjB,EAAAF,EAAAC,GAAAC,EAAAF,GAAAC,EAAAoB,KAAA,EAAAG,EAAA,mBAAAG,OAAAA,OAAA,CAAA,EAAAoB,EAAAvB,EAAAiB,UAAA,aAAAe,EAAAhC,EAAAiC,eAAA,kBAAAC,EAAAlC,EAAAmC,aAAA,gBAAA,SAAAC,EAAA1D,EAAAF,EAAAC,GAAA,OAAAE,OAAAgB,eAAAjB,EAAAF,EAAA,CAAAqB,MAAApB,EAAAQ,YAAA,EAAAa,cAAA,EAAAC,UAAA,IAAArB,EAAAF,EAAA,CAAA,IAAA4D,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA1D,GAAA0D,EAAA,SAAA1D,EAAAF,EAAAC,GAAA,OAAAC,EAAAF,GAAAC,CAAA,CAAA,CAAA,SAAA4D,EAAA3D,EAAAF,EAAAC,EAAAoD,GAAA,IAAA7B,EAAAxB,GAAAA,EAAA2C,qBAAAmB,EAAA9D,EAAA8D,EAAAf,EAAA5C,OAAA4D,OAAAvC,EAAAmB,WAAAa,EAAA,IAAAQ,EAAAX,GAAA,IAAA,OAAA/C,EAAAyC,EAAA,UAAA,CAAA1B,MAAA4C,EAAA/D,EAAAD,EAAAuD,KAAAT,CAAA,CAAA,SAAAmB,EAAAhE,EAAAF,EAAAC,GAAA,IAAA,MAAA,CAAAkE,KAAA,SAAAC,IAAAlE,EAAA2B,KAAA7B,EAAAC,GAAA,CAAA,MAAAC,GAAA,MAAA,CAAAiE,KAAA,QAAAC,IAAAlE,EAAA,CAAA,CAAAF,EAAA6D,KAAAA,EAAA,IAAAQ,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,CAAA,EAAA,SAAAX,IAAA,CAAA,SAAAY,IAAA,CAAA,SAAAC,IAAA,CAAA,IAAAC,EAAA,CAAA,EAAAhB,EAAAgB,EAAA7B,GAAA,WAAA,OAAA8B,IAAA,IAAA,IAAAC,EAAA3E,OAAA4E,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAA/E,GAAAoD,EAAAxB,KAAAmD,EAAAjC,KAAA6B,EAAAI,GAAA,IAAAE,EAAAP,EAAAhC,UAAAmB,EAAAnB,UAAAxC,OAAA4D,OAAAa,GAAA,SAAAO,EAAAjF,GAAA,CAAA,OAAA,QAAA,UAAAa,SAAA,SAAAf,GAAA4D,EAAA1D,EAAAF,GAAA,SAAAE,GAAA,OAAA2E,KAAAO,QAAApF,EAAAE,EAAA,GAAA,GAAA,CAAA,SAAAmF,EAAAnF,EAAAF,GAAA,SAAAsF,EAAArF,EAAAK,EAAAkB,EAAAuB,GAAA,IAAAS,EAAAU,EAAAhE,EAAAD,GAAAC,EAAAI,GAAA,GAAA,UAAAkD,EAAAW,KAAA,CAAA,IAAAT,EAAAF,EAAAY,IAAAC,EAAAX,EAAArC,MAAA,OAAAgD,GAAA,UAAA3C,QAAA2C,IAAAhB,EAAAxB,KAAAwC,EAAA,WAAArE,EAAAuF,QAAAlB,EAAAmB,SAAAC,MAAA,SAAAvF,GAAAoF,EAAA,OAAApF,EAAAsB,EAAAuB,EAAA,IAAA,SAAA7C,GAAAoF,EAAA,QAAApF,EAAAsB,EAAAuB,EAAA,IAAA/C,EAAAuF,QAAAlB,GAAAoB,MAAA,SAAAvF,GAAAwD,EAAArC,MAAAnB,EAAAsB,EAAAkC,EAAA,IAAA,SAAAxD,GAAA,OAAAoF,EAAA,QAAApF,EAAAsB,EAAAuB,EAAA,GAAA,CAAAA,EAAAS,EAAAY,IAAA,CAAA,IAAAnE,EAAAK,EAAAuE,KAAA,UAAA,CAAAxD,MAAA,SAAAnB,EAAAmD,GAAA,SAAAqC,IAAA,OAAA,IAAA1F,GAAA,SAAAA,EAAAC,GAAAqF,EAAApF,EAAAmD,EAAArD,EAAAC,EAAA,GAAA,CAAA,OAAAA,EAAAA,EAAAA,EAAAwF,KAAAC,EAAAA,GAAAA,GAAA,GAAA,CAAA,SAAAzB,EAAAjE,EAAAC,EAAAoD,GAAA,IAAA/C,EAAA+D,EAAA,OAAA,SAAA7C,EAAAuB,GAAA,GAAAzC,IAAAiE,EAAA,MAAAoB,MAAA,gCAAA,GAAArF,IAAAkE,EAAA,CAAA,GAAA,UAAAhD,EAAA,MAAAuB,EAAA,MAAA,CAAA1B,MAAAnB,EAAA0F,MAAA,EAAA,CAAA,IAAAvC,EAAAwC,OAAArE,EAAA6B,EAAAe,IAAArB,IAAA,CAAA,IAAAS,EAAAH,EAAAyC,SAAA,GAAAtC,EAAA,CAAA,IAAAE,EAAAqC,EAAAvC,EAAAH,GAAA,GAAAK,EAAA,CAAA,GAAAA,IAAAe,EAAA,SAAA,OAAAf,CAAA,CAAA,CAAA,GAAA,SAAAL,EAAAwC,OAAAxC,EAAA2C,KAAA3C,EAAA4C,MAAA5C,EAAAe,SAAA,GAAA,UAAAf,EAAAwC,OAAA,CAAA,GAAAvF,IAAA+D,EAAA,MAAA/D,EAAAkE,EAAAnB,EAAAe,IAAAf,EAAA6C,kBAAA7C,EAAAe,IAAA,KAAA,WAAAf,EAAAwC,QAAAxC,EAAA8C,OAAA,SAAA9C,EAAAe,KAAA9D,EAAAiE,EAAA,IAAAK,EAAAV,EAAAlE,EAAAC,EAAAoD,GAAA,GAAA,WAAAuB,EAAAT,KAAA,CAAA,GAAA7D,EAAA+C,EAAAuC,KAAApB,EAAAF,EAAAM,EAAAR,MAAAK,EAAA,SAAA,MAAA,CAAApD,MAAAuD,EAAAR,IAAAwB,KAAAvC,EAAAuC,KAAA,CAAA,UAAAhB,EAAAT,OAAA7D,EAAAkE,EAAAnB,EAAAwC,OAAA,QAAAxC,EAAAe,IAAAQ,EAAAR,IAAA,CAAA,CAAA,CAAA,SAAA2B,EAAA/F,EAAAC,GAAA,IAAAoD,EAAApD,EAAA4F,OAAAvF,EAAAN,EAAAyC,SAAAY,GAAA,GAAA/C,IAAAJ,EAAA,OAAAD,EAAA6F,SAAA,KAAA,UAAAzC,GAAArD,EAAAyC,SAAA,YAAAxC,EAAA4F,OAAA,SAAA5F,EAAAmE,IAAAlE,EAAA6F,EAAA/F,EAAAC,GAAA,UAAAA,EAAA4F,SAAA,WAAAxC,IAAApD,EAAA4F,OAAA,QAAA5F,EAAAmE,IAAA,IAAAtC,UAAA,oCAAAuB,EAAA,aAAAoB,EAAA,IAAAjD,EAAA0C,EAAA5D,EAAAN,EAAAyC,SAAAxC,EAAAmE,KAAA,GAAA,UAAA5C,EAAA2C,KAAA,OAAAlE,EAAA4F,OAAA,QAAA5F,EAAAmE,IAAA5C,EAAA4C,IAAAnE,EAAA6F,SAAA,KAAArB,EAAA,IAAA1B,EAAAvB,EAAA4C,IAAA,OAAArB,EAAAA,EAAA6C,MAAA3F,EAAAD,EAAAoG,YAAArD,EAAA1B,MAAApB,EAAAoG,KAAArG,EAAAsG,QAAA,WAAArG,EAAA4F,SAAA5F,EAAA4F,OAAA,OAAA5F,EAAAmE,IAAAlE,GAAAD,EAAA6F,SAAA,KAAArB,GAAA1B,GAAA9C,EAAA4F,OAAA,QAAA5F,EAAAmE,IAAA,IAAAtC,UAAA,oCAAA7B,EAAA6F,SAAA,KAAArB,EAAA,CAAA,SAAA8B,EAAArG,GAAA,IAAAF,EAAA,CAAAwG,OAAAtG,EAAA,IAAA,KAAAA,IAAAF,EAAAyG,SAAAvG,EAAA,IAAA,KAAAA,IAAAF,EAAA0G,WAAAxG,EAAA,GAAAF,EAAA2G,SAAAzG,EAAA,IAAA2E,KAAA+B,WAAAlG,KAAAV,EAAA,CAAA,SAAA6G,EAAA3G,GAAA,IAAAF,EAAAE,EAAA4G,YAAA,CAAA,EAAA9G,EAAAmE,KAAA,gBAAAnE,EAAAoE,IAAAlE,EAAA4G,WAAA9G,CAAA,CAAA,SAAAgE,EAAA9D,GAAA2E,KAAA+B,WAAA,CAAA,CAAAJ,OAAA,SAAAtG,EAAAa,QAAAwF,EAAA1B,MAAAA,KAAAkC,OAAA,EAAA,CAAA,SAAA9B,EAAAjF,GAAA,GAAAA,GAAA,KAAAA,EAAA,CAAA,IAAAC,EAAAD,EAAA+C,GAAA,GAAA9C,EAAA,OAAAA,EAAA4B,KAAA7B,GAAA,GAAA,mBAAAA,EAAAqG,KAAA,OAAArG,EAAA,IAAAgH,MAAAhH,EAAAc,QAAA,CAAA,IAAAR,GAAA,EAAAkB,EAAA,SAAA6E,IAAA,OAAA/F,EAAAN,EAAAc,QAAA,GAAAuC,EAAAxB,KAAA7B,EAAAM,GAAA,OAAA+F,EAAAhF,MAAArB,EAAAM,GAAA+F,EAAAT,MAAA,EAAAS,EAAA,OAAAA,EAAAhF,MAAAnB,EAAAmG,EAAAT,MAAA,EAAAS,CAAA,EAAA,OAAA7E,EAAA6E,KAAA7E,CAAA,CAAA,CAAA,MAAA,IAAAM,UAAAJ,QAAA1B,GAAA,mBAAA,CAAA,OAAA0E,EAAA/B,UAAAgC,EAAArE,EAAA4E,EAAA,cAAA,CAAA7D,MAAAsD,EAAArD,cAAA,IAAAhB,EAAAqE,EAAA,cAAA,CAAAtD,MAAAqD,EAAApD,cAAA,IAAAoD,EAAAuC,YAAArD,EAAAe,EAAAjB,EAAA,qBAAA1D,EAAAkH,oBAAA,SAAAhH,GAAA,IAAAF,EAAA,mBAAAE,GAAAA,EAAAwC,YAAA,QAAA1C,IAAAA,IAAA0E,GAAA,uBAAA1E,EAAAiH,aAAAjH,EAAAkD,MAAA,EAAAlD,EAAAmH,KAAA,SAAAjH,GAAA,OAAAC,OAAAiH,eAAAjH,OAAAiH,eAAAlH,EAAAyE,IAAAzE,EAAAmH,UAAA1C,EAAAf,EAAA1D,EAAAwD,EAAA,sBAAAxD,EAAAyC,UAAAxC,OAAA4D,OAAAmB,GAAAhF,CAAA,EAAAF,EAAAsH,MAAA,SAAApH,GAAA,MAAA,CAAAsF,QAAAtF,EAAA,EAAAiF,EAAAE,EAAA1C,WAAAiB,EAAAyB,EAAA1C,UAAAa,GAAA,WAAA,OAAAqB,IAAA,IAAA7E,EAAAqF,cAAAA,EAAArF,EAAAuH,MAAA,SAAArH,EAAAD,EAAAoD,EAAA/C,EAAAkB,QAAA,IAAAA,IAAAA,EAAAgG,SAAA,IAAAzE,EAAA,IAAAsC,EAAAxB,EAAA3D,EAAAD,EAAAoD,EAAA/C,GAAAkB,GAAA,OAAAxB,EAAAkH,oBAAAjH,GAAA8C,EAAAA,EAAAsD,OAAAZ,MAAA,SAAAvF,GAAA,OAAAA,EAAA0F,KAAA1F,EAAAmB,MAAA0B,EAAAsD,MAAA,GAAA,EAAAlB,EAAAD,GAAAtB,EAAAsB,EAAAxB,EAAA,aAAAE,EAAAsB,EAAAnC,GAAA,WAAA,OAAA8B,IAAA,IAAAjB,EAAAsB,EAAA,YAAA,WAAA,MAAA,oBAAA,IAAAlF,EAAAI,KAAA,SAAAF,GAAA,IAAAF,EAAAG,OAAAD,GAAAD,EAAA,GAAA,IAAA,IAAAoD,KAAArD,EAAAC,EAAAS,KAAA2C,GAAA,OAAApD,EAAAwH,UAAA,SAAApB,IAAA,KAAApG,EAAAa,QAAA,CAAA,IAAAZ,EAAAD,EAAAyH,MAAA,GAAAxH,KAAAF,EAAA,OAAAqG,EAAAhF,MAAAnB,EAAAmG,EAAAT,MAAA,EAAAS,CAAA,CAAA,OAAAA,EAAAT,MAAA,EAAAS,CAAA,CAAA,EAAArG,EAAAiF,OAAAA,EAAAjB,EAAArB,UAAA,CAAAD,YAAAsB,EAAA+C,MAAA,SAAA/G,GAAA,GAAA6E,KAAA8C,KAAA,EAAA9C,KAAAwB,KAAA,EAAAxB,KAAAmB,KAAAnB,KAAAoB,MAAA/F,EAAA2E,KAAAe,MAAA,EAAAf,KAAAiB,SAAA,KAAAjB,KAAAgB,OAAA,OAAAhB,KAAAT,IAAAlE,EAAA2E,KAAA+B,WAAA7F,QAAA8F,IAAA7G,EAAA,IAAA,IAAAC,KAAA4E,KAAA,MAAA5E,EAAA2H,OAAA,IAAAvE,EAAAxB,KAAAgD,KAAA5E,KAAA+G,OAAA/G,EAAAgD,MAAA,MAAA4B,KAAA5E,GAAAC,EAAA,EAAA2H,KAAA,WAAAhD,KAAAe,MAAA,EAAA,IAAA1F,EAAA2E,KAAA+B,WAAA,GAAAE,WAAA,GAAA,UAAA5G,EAAAiE,KAAA,MAAAjE,EAAAkE,IAAA,OAAAS,KAAAiD,IAAA,EAAA5B,kBAAA,SAAAlG,GAAA,GAAA6E,KAAAe,KAAA,MAAA5F,EAAA,IAAAC,EAAA4E,KAAA,SAAAkD,EAAA1E,EAAA/C,GAAA,OAAAyC,EAAAoB,KAAA,QAAApB,EAAAqB,IAAApE,EAAAC,EAAAoG,KAAAhD,EAAA/C,IAAAL,EAAA4F,OAAA,OAAA5F,EAAAmE,IAAAlE,KAAAI,CAAA,CAAA,IAAA,IAAAA,EAAAuE,KAAA+B,WAAA9F,OAAA,EAAAR,GAAA,IAAAA,EAAA,CAAA,IAAAkB,EAAAqD,KAAA+B,WAAAtG,GAAAyC,EAAAvB,EAAAsF,WAAA,GAAA,SAAAtF,EAAAgF,OAAA,OAAAuB,EAAA,OAAA,GAAAvG,EAAAgF,QAAA3B,KAAA8C,KAAA,CAAA,IAAAnE,EAAAH,EAAAxB,KAAAL,EAAA,YAAAkC,EAAAL,EAAAxB,KAAAL,EAAA,cAAA,GAAAgC,GAAAE,EAAA,CAAA,GAAAmB,KAAA8C,KAAAnG,EAAAiF,SAAA,OAAAsB,EAAAvG,EAAAiF,UAAA,GAAA,GAAA5B,KAAA8C,KAAAnG,EAAAkF,WAAA,OAAAqB,EAAAvG,EAAAkF,WAAA,MAAA,GAAAlD,GAAA,GAAAqB,KAAA8C,KAAAnG,EAAAiF,SAAA,OAAAsB,EAAAvG,EAAAiF,UAAA,OAAA,CAAA,IAAA/C,EAAA,MAAAiC,MAAA,0CAAA,GAAAd,KAAA8C,KAAAnG,EAAAkF,WAAA,OAAAqB,EAAAvG,EAAAkF,WAAA,CAAA,CAAA,CAAA,EAAAP,OAAA,SAAAjG,EAAAF,GAAA,IAAA,IAAAC,EAAA4E,KAAA+B,WAAA9F,OAAA,EAAAb,GAAA,IAAAA,EAAA,CAAA,IAAAK,EAAAuE,KAAA+B,WAAA3G,GAAA,GAAAK,EAAAkG,QAAA3B,KAAA8C,MAAAtE,EAAAxB,KAAAvB,EAAA,eAAAuE,KAAA8C,KAAArH,EAAAoG,WAAA,CAAA,IAAAlF,EAAAlB,EAAA,KAAA,CAAA,CAAAkB,IAAA,UAAAtB,GAAA,aAAAA,IAAAsB,EAAAgF,QAAAxG,GAAAA,GAAAwB,EAAAkF,aAAAlF,EAAA,MAAA,IAAAuB,EAAAvB,EAAAA,EAAAsF,WAAA,CAAA,EAAA,OAAA/D,EAAAoB,KAAAjE,EAAA6C,EAAAqB,IAAApE,EAAAwB,GAAAqD,KAAAgB,OAAA,OAAAhB,KAAAwB,KAAA7E,EAAAkF,WAAAjC,GAAAI,KAAAmD,SAAAjF,EAAA,EAAAiF,SAAA,SAAA9H,EAAAF,GAAA,GAAA,UAAAE,EAAAiE,KAAA,MAAAjE,EAAAkE,IAAA,MAAA,UAAAlE,EAAAiE,MAAA,aAAAjE,EAAAiE,KAAAU,KAAAwB,KAAAnG,EAAAkE,IAAA,WAAAlE,EAAAiE,MAAAU,KAAAiD,KAAAjD,KAAAT,IAAAlE,EAAAkE,IAAAS,KAAAgB,OAAA,SAAAhB,KAAAwB,KAAA,OAAA,WAAAnG,EAAAiE,MAAAnE,IAAA6E,KAAAwB,KAAArG,GAAAyE,CAAA,EAAAwD,OAAA,SAAA/H,GAAA,IAAA,IAAAF,EAAA6E,KAAA+B,WAAA9F,OAAA,EAAAd,GAAA,IAAAA,EAAA,CAAA,IAAAC,EAAA4E,KAAA+B,WAAA5G,GAAA,GAAAC,EAAAyG,aAAAxG,EAAA,OAAA2E,KAAAmD,SAAA/H,EAAA6G,WAAA7G,EAAA0G,UAAAE,EAAA5G,GAAAwE,CAAA,CAAA,EAAAyD,QAAA,SAAAhI,GAAA,IAAA,IAAAF,EAAA6E,KAAA+B,WAAA9F,OAAA,EAAAd,GAAA,IAAAA,EAAA,CAAA,IAAAC,EAAA4E,KAAA+B,WAAA5G,GAAA,GAAAC,EAAAuG,SAAAtG,EAAA,CAAA,IAAAmD,EAAApD,EAAA6G,WAAA,GAAA,UAAAzD,EAAAc,KAAA,CAAA,IAAA7D,EAAA+C,EAAAe,IAAAyC,EAAA5G,EAAA,CAAA,OAAAK,CAAA,CAAA,CAAA,MAAAqF,MAAA,wBAAA,EAAAwC,cAAA,SAAAnI,EAAAC,EAAAoD,GAAA,OAAAwB,KAAAiB,SAAA,CAAArD,SAAAwC,EAAAjF,GAAAoG,WAAAnG,EAAAqG,QAAAjD,GAAA,SAAAwB,KAAAgB,SAAAhB,KAAAT,IAAAlE,GAAAuE,CAAA,GAAAzE,CAAA,CAAA,SAAAoI,mBAAA/E,EAAAnD,EAAAF,EAAAC,EAAAK,EAAAyC,EAAAS,GAAA,IAAA,IAAAhC,EAAA6B,EAAAN,GAAAS,GAAAE,EAAAlC,EAAAH,KAAA,CAAA,MAAAgC,GAAA,YAAArD,EAAAqD,EAAA,CAAA7B,EAAAoE,KAAA1F,EAAAwD,GAAA8D,QAAAjC,QAAA7B,GAAA+B,KAAAxF,EAAAK,EAAA,CAAA,SAAA+H,kBAAAhF,GAAA,OAAA,WAAA,IAAAnD,EAAA2E,KAAA7E,EAAAa,UAAA,OAAA,IAAA2G,SAAA,SAAAvH,EAAAK,GAAA,IAAAyC,EAAAM,EAAA1C,MAAAT,EAAAF,GAAA,SAAAsI,EAAAjF,GAAA+E,mBAAArF,EAAA9C,EAAAK,EAAAgI,EAAAC,EAAA,OAAAlF,EAAA,CAAA,SAAAkF,EAAAlF,GAAA+E,mBAAArF,EAAA9C,EAAAK,EAAAgI,EAAAC,EAAA,QAAAlF,EAAA,CAAAiF,OAAA,EAAA,GAAA,CAAA,CAAA,IAAME,OAAS,kBACTC,mBAAqB,kCACrBC,WAAaF,OAAS,KAAOC,mBAC7BE,YAAc,CAClB,iBACA,aACA,sBAEEC,WAAY,EACVC,WAAa,mBACfC,kBAAoB,oBACpBC,OAAQ,EAENC,YAAW,WAAA,IAAAC,EAAAZ,kBAAA/E,sBAAA6D,MAAG,SAAA+B,EAAOC,GAAK,IAAAC,EAAA,OAAA9F,sBAAAO,MAAA,SAAAwF,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAhD,MAAA,KAAA,EACD,GAAvB+C,EAAMD,EAAMG,QAAQF,KACtB,UAAUhG,KAAKgG,GAAI,CAAAC,EAAAhD,KAAA,EAAA,KAAA,CAAA,OAAAgD,EAAAlD,OAAA,SACdoD,YAAYJ,IAAM,KAAA,EAAA,IAChB,UAAU/F,KAAKgG,GAAI,CAAAC,EAAAhD,KAAA,EAAA,KAAA,CAAA,OAAAgD,EAAAlD,OAAA,SACrBqD,WAAWL,IAAM,KAAA,EAAA,IACf,yBAAyB/F,KAAKgG,GAAI,CAAAC,EAAAhD,KAAA,GAAA,KAAA,CAAA,OAAAgD,EAAAlD,OAAA,SACpCsD,YAAYN,IAAM,KAAA,GAAA,IAChB,kBAAkB/F,KAAKgG,GAAI,CAAAC,EAAAhD,KAAA,GAAA,KAAA,CAAA,OAAAgD,EAAAlD,OAAA,SAC7BsD,YAAYN,IAAM,KAAA,GAAA,IAChB,mBAAmB/F,KAAKgG,GAAI,CAAAC,EAAAhD,KAAA,GAAA,KAAA,CAAA,OAAAgD,EAAAlD,OAAA,SAC9BsD,YAAYN,IAAM,KAAA,GAAA,IAChB,gBAAgB/F,KAAKgG,GAAI,CAAAC,EAAAhD,KAAA,GAAA,KAAA,CAAA,OAAAgD,EAAAlD,OAAA,SAC3BsD,YAAYN,IAAM,KAAA,GAAA,IAChB,qBAAqB/F,KAAKgG,GAAI,CAAAC,EAAAhD,KAAA,GAAA,KAAA,CAAA,OAAAgD,EAAAlD,OAAA,SAChCsD,YAAYN,IAAM,KAAA,GAAA,IAChB,aAAa/F,KAAKgG,GAAI,CAAAC,EAAAhD,KAAA,GAAA,KAAA,CAAA,OAAAgD,EAAAlD,OAAA,SACxBsD,YAAYN,IAAM,KAAA,GAAA,IAChB,gEAAgE/F,KAAKgG,GAAI,CAAAC,EAAAhD,KAAA,GAAA,KAAA,CAAA,OAAAgD,EAAAlD,OAAA,SAC3EsD,YAAYN,IAAM,KAAA,GAAA,IAChB,gBAAgB/F,KAAKgG,GAAI,CAAAC,EAAAhD,KAAA,GAAA,KAAA,CAAA,OAAAgD,EAAAlD,OAAA,SAC3BsD,YAAYN,IAAM,KAAA,GAAA,OAAAE,EAAAlD,OAAA,SAElBqD,WAAWL,IAAM,KAAA,GAAA,IAAA,MAAA,OAAAE,EAAAxB,OAAA,GAAAqB,EAAA,KAE3B,OAAA,SAzBgBQ,GAAA,OAAAT,EAAAtI,MAAAkE,KAAAhE,UAAA,CAAA,CAAA,GA0BX8I,IAAM,CACVC,GAAI,CACFC,SAAU,8BACVC,OAAQ,iCACRC,MAAO,gCACPC,UAAW,oCACXC,MAAO,iCAETC,QAAS,CACPL,SAAU,mCACVC,OAAQ,sCACRC,MAAO,qCACPC,UAAW,yCACXC,MAAO,sCAETE,IAAK,CACHN,SAAU,+BACVC,OAAQ,kCACRC,MAAO,iCACPC,UAAW,qCACXC,MAAO,iCACPG,MAAO,oBACPC,MAAO,4BAETC,MAAO,CACLA,MAAO,yCACPC,QAAS,0BACTC,QAAS,oCACTC,UAAW,mDACXC,QAAS,mDAGPC,eAAiB,GACvB,IAAK,IAAMxG,QAAQwF,IACjB,IAAK,IAAMiB,OAAOjB,IAAIxF,MACpBwG,eAAejK,KAAK,CAAEyD,KAAYyG,IAAKjB,IAAIxF,MAAMyG,OAGrD,IAAMC,SAAWC,QACXC,MAAQ,CACZC,MAAO,UACPC,IAAK,UACLC,MAAO,UACPC,OAAQ,UACRC,KAAM,UACNC,QAAS,UACTC,KAAM,UACNC,MAAO,WAEHC,IAAM,WAIV,IAHA,IAAIC,EAAK,CACP,IAEOb,EAAM,EAAGA,EAAM/J,UAAIC,OAAQ8J,IAAO,CACzC,IAAiCc,EAAA9I,SAAHgI,EAAG,GAAA/J,UAAAC,QAAH8J,EAAGe,UAAA9K,UAAH+J,IAAvBgB,EAAKF,EAAA,GAAKG,EAAKH,EAAAzI,MAAA,GACtBwI,EAAG,IAAMG,EACTH,EAAKA,EAAGK,OAAOD,EACjB,CACA,OAAOJ,CACT,EACMM,UAAY,SAACC,GAAI,OAAK,WAEkC,IAA5D,IAAMC,EAAc,SAARD,EAAkBnB,SAASmB,GAAQnB,SAASqB,IAAIC,EAAAtL,UAAAC,OAF9BsL,EAAI,IAAA9J,MAAA6J,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAAxL,UAAAwL,GAGlCJ,EAAItL,WAAM,EAAQyL,EACpB,CAAC,EACKE,YAAc,SAACN,GAAI,OAAK,WACQ,IAApC,IAAMC,EAAMpB,SAAS0B,eAAeC,EAAA3L,UAAAC,OADJsL,EAAI,IAAA9J,MAAAkK,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJL,EAAIK,GAAA5L,UAAA4L,GAEpCR,EAAItL,WAAM,EAAQyL,EACpB,CAAC,EACKM,WAAa,CACjBC,KAAM,SAACC,GACL,GAAmB,iBAARA,GAAmC,iBAARA,EACpC,MAAA,GAAAd,OAAUc,EAAG,uBAEf,IAAK,IAAIhC,EAAM,EAAGA,EAAMgC,EAAI9L,OAAQ8J,IAClCgC,EAAIhC,IAAI,sBAEV,OAAOgC,CACT,GAEIC,UAAY,CAChBX,IAAK,QACLY,KAAM,OACNC,MAAO,MACPC,KAAM,SACNC,MAAO,QACPC,KAAM,OACN/D,MAAO,WAEHgE,YAAc,SAACjK,GAAI,OAAK,WAAY,IAAA,IAAAkK,EAAAvM,UAAAC,OAAR8L,EAAG,IAAAtK,MAAA8K,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAHT,EAAGS,GAAAxM,UAAAwM,GACnC,GAAsB,WAAlB3L,QAAOkL,EAAI,IAAf,CAIA,IAAIU,EAASV,EACM,iBAARA,GAAmC,iBAARA,IACpCU,EAASZ,WAAWG,UAAU3J,IAAO0J,IAEvCb,UAAU7I,GAAKvC,WAAA,EAAAsB,mBAAIuJ,IAAIkB,WAAWC,KAAKD,WAAWG,UAAU3J,IAAM,IAAA4I,OAAKyB,iBAAiBrK,GAAK,QAAQoK,IALrG,MAFEvB,UAAU7I,GAAKvC,WAAA,EAAAsB,mBAAIuJ,IAAG7K,WAAA,EAAA,CAAC+L,WAAWC,KAAKD,WAAWG,UAAU3J,IAAM,IAAA4I,OAAKyB,iBAAiBrK,GAAK,SAAM4I,OAAKc,KAQ5G,CAAC,EACKY,cAAgB,SAACtK,GAAI,OAAK,WAAY,IAAA,IAAAuK,EAAA5M,UAAAC,OAAR8L,EAAG,IAAAtK,MAAAmL,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAHd,EAAGc,GAAA7M,UAAA6M,GACrC,GAAsB,WAAlBhM,QAAOkL,EAAI,IAAf,CAIA,IAAIU,EAASV,EACM,iBAARA,GAAmC,iBAARA,IACpCU,EAASZ,WAAWG,UAAU3J,IAAO0J,IAEvCb,UAAU7I,GAAKvC,WAAA,EAAAsB,mBAAIuJ,IAAIkB,WAAWC,KAAKD,WAAU,KAAAZ,OAAMyB,iBAAiBV,UAAU3J,MAAS,IAAA4I,OAAKyB,iBAAiBrK,GAAK,QAAQoK,IAL9H,MAFEvB,UAAU7I,GAAKvC,WAAA,EAAAsB,mBAAIuJ,IAAG7K,WAAA,EAAA,CAAC+L,WAAWC,KAAKD,WAAU,KAAAZ,OAAMyB,iBAAiBV,UAAU3J,MAAS,IAAA4I,OAAKyB,iBAAiBrK,GAAK,SAAM4I,OAAKc,KAQrI,CAAC,EACKe,iBAAmB,SAACzK,GAAI,OAAK,WAAY,IAAA,IAAA0K,EAAA/M,UAAAC,OAAR8L,EAAG,IAAAtK,MAAAsL,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAHjB,EAAGiB,GAAAhN,UAAAgN,GACxC,GAAsB,WAAlBnM,QAAOkL,EAAI,IAAf,CAIA,IAAIU,EAASV,EACM,iBAARA,GAAmC,iBAARA,IACpCU,EAASZ,WAAWG,UAAU3J,IAAO0J,IAEvCN,YAAYpJ,GAAKvC,WAAA,EAAAsB,mBAAIuJ,IAAIkB,WAAWC,KAAKD,WAAWG,UAAU3J,IAAM,IAAA4I,OAAKyB,iBAAiBrK,GAAK,QAAQoK,IALvG,MAFEhB,YAAYpJ,GAAKvC,WAAA,EAAAsB,mBAAIuJ,IAAG7K,WAAA,EAAA,CAAC+L,WAAWC,KAAKD,WAAWG,UAAU3J,IAAM,IAAA4I,OAAKyB,iBAAiBrK,GAAK,SAAM4I,OAAKc,KAQ9G,CAAC,EACKkB,MAAQ,CACZC,MAAO,CACLC,IAAKnD,SAASoD,UAEhBC,GAAI,CAAC,GAEP/N,OAAOC,KAAKyM,WAAW9L,SAAQ,SAAA6J,GAC7BkD,MAAMlD,GAAOuC,YAAYvC,GACzBkD,MAAMC,MAAMnD,GAAO+C,iBAAiB/C,GACpCkD,MAAMI,GAAGtD,GAAO4C,cAAc5C,EAChC,IACA,IAAM2C,iBAAmB,SAACX,GAAG,OAAKA,EAAIuB,cAAcC,QAAQ,eAAe,SAACC,GAAC,OAAKA,EAAEC,aAAa,GAAC,EAClGnO,OAAOC,KAAK2K,OAAOhK,SAAQ,SAAA6J,GACzB8B,WAAW9B,GAAO,SAACgC,GACjB,GAAmB,iBAARA,GAAmC,iBAARA,EACpC,MAAO,CAAA,KAAAd,OAAMc,GAAG,SAAAd,OAAaf,MAAMH,KAErC,IAAK,IAAIpJ,EAAI,EAAGA,EAAIoL,EAAI9L,OAAQU,IAC9BoL,EAAIpL,IAAE,UAAAsK,OAAcf,MAAMH,IAE5B,OAAOgC,CACT,EACAF,WAAU,KAAAZ,OAAMyB,iBAAiB3C,KAAU,SAACgC,GAC1C,GAAmB,iBAARA,GAAmC,iBAARA,EACpC,MAAO,CAAA,KAAAd,OAAMc,GAAG,gDAAAd,OAA4D,UAARlB,EAAkB,OAAS,OAAM,oCAAAkB,OAAmCf,MAAMH,GAAI,MAEpJ,IAAK,IAAIpJ,EAAI,EAAGA,EAAIoL,EAAI9L,OAAQU,IAC9BoL,EAAIpL,IAAE,wEAAAsK,OAA4Ef,MAAMH,GAAI,KAE9F,OAAOgC,CACT,CACF,IACA2B,KAAKC,OAAM5N,cAAAA,cAAA,CACT4K,KACGsC,OACApB,YAGA3D,QACHyF,OAAS,CACPtC,IAAK,WAAQ,EACbY,KAAM,WAAQ,EACdC,MAAO,WAAQ,EACfC,KAAM,WAAQ,EACdC,MAAO,WAAQ,EACfC,KAAM,WAAQ,EACd/D,MAAO,WAAQ,EACf4E,MAAO,CACL7B,IAAK,WAAQ,EACbY,KAAM,WAAQ,EACdC,MAAO,WAAQ,EACfC,KAAM,WAAQ,EACdC,MAAO,WAAQ,EACfC,KAAM,WAAQ,EACd/D,MAAO,WAAQ,EACf6E,IAAK,WAAQ,GAEfE,GAAI,CACFhC,IAAK,WAAQ,EACbY,KAAM,WAAQ,EACdC,MAAO,WAAQ,EACfC,KAAM,WAAQ,EACdC,MAAO,WAAQ,EACfC,KAAM,WAAQ,EACd/D,MAAO,WAAQ,IAGnB2B,QAAQoB,IAAM,WAAQ,GAGxB,IAAMuC,cAAgB,WACpB,MAAO,uCAAuCL,QAAQ,SAAS,SAAU5K,GACvE,IAAIvD,EAAoB,GAAhByO,KAAKC,SAAgB,EAC7B,OADyC,KAALnL,EAAWvD,EAAS,EAAJA,EAAU,GACrD+C,SAAS,GACpB,GACF,EACAuL,KAAKK,GAAK,CACRC,KAAM,SAACjE,EAAKkE,GAEV,OADKA,IAAUA,EAAS,CAAE3K,KAAM,SACzB,IAAIqD,SAAQ,SAACjC,EAASwJ,GAC3BC,OAAOC,KAAKvG,YAAYjD,MAAK,SAAAyJ,GAC3BA,EAAMC,MAAM,IAAIC,QAAO,sBAAAtD,OAAuBuD,mBAAmBzE,MAASnF,MAAK,SAAU6J,GAClFA,GAAK/J,EAAQ,MAClB+J,EAAIC,OAAO9J,MAAK,SAAA8J,GAAI,OAAIhK,EAAQgK,EAAK,GACvC,IAAE,UAAO,WACPhK,EAAQ,KACV,GACF,GACF,GACF,EACAiK,MAAO,SAAC5E,EAAKvJ,GACX,OAAO,IAAImG,SAAQ,SAACjC,EAASwJ,GAC3BC,OAAOC,KAAKvG,YAAYjD,MAAK,SAAUyJ,GACrCA,EAAMO,IAAI,IAAIL,QAAO,sBAAAtD,OAAuBuD,mBAAmBzE,KAAS,IAAI8E,SAASrO,IACrFkE,GACF,IAAE,UAAO,WACPwJ,GACF,GACF,GACF,GAEF,IAAMY,eAAiB,SAAC5M,EAAG6M,GAIzB,IAHA,IAAIC,EAAK9M,EAAE+M,MAAM,KACbC,EAAKH,EAAEE,MAAM,KACXE,EAAMtB,KAAKuB,IAAIJ,EAAG/O,OAAQiP,EAAGjP,QAC5B+O,EAAG/O,OAASkP,GACjBH,EAAGnP,KAAK,KAEV,KAAOqP,EAAGjP,OAASkP,GACjBD,EAAGrP,KAAK,KAEV,IAAK,IAAIc,EAAI,EAAGA,EAAIwO,EAAKxO,IAAK,CAC5B,IAAM0O,EAAOC,SAASN,EAAGrO,IACnB4O,EAAOD,SAASJ,EAAGvO,IACzB,GAAI0O,EAAOE,EACT,OAAOrN,EACF,GAAImN,EAAOE,EAChB,OAAOR,CAEX,CACA,OAAO7M,CACT,EAEMsN,QAAU,CAAA,8BAAAvE,OACgBjD,WAAU,WAAA,kCAAAiD,OACNjD,WAAU,WAAA,yCAAAiD,OACHjD,WAAU,YAE/CyH,gBAAe,WAAA,IAAAC,EAAAlI,kBAAA/E,sBAAA6D,MAAG,SAAAqJ,IAAA,OAAAlN,sBAAAO,MAAA,SAAA4M,GAAA,cAAAA,EAAA9I,KAAA8I,EAAApK,MAAA,KAAA,EAAA,OAAAoK,EAAApK,KAAA,EACIuI,GAAGC,KAAK,gBAAe,KAAA,EAAA,GAAA4B,EAAAC,GAAAD,EAAAzK,KAAAyK,EAAAC,GAAA,CAAAD,EAAApK,KAAA,EAAA,KAAA,CAAAoK,EAAAC,GAAI5H,kBAAiB,KAAA,EAAtEA,kBAAiB2H,EAAAC,GACjBlC,OAAON,GAAGhB,KAAI,kBAAApB,OAAmBjD,WAAU,KAAAiD,OAAIhD,oBAAoB,KAAA,EAAA,IAAA,MAAA,OAAA2H,EAAA5I,OAAA,GAAA2I,EAAA,KACpE,OAAA,WAHoB,OAAAD,EAAA5P,MAAAkE,KAAAhE,UAAA,CAAA,CAAA,GAIjB8P,YAAc,EACZC,iBAAgB,WAAA,IAAAC,EAAAxI,kBAAA/E,sBAAA6D,MAAG,SAAA2J,IAAA,IAAAvM,EAAA,OAAAjB,sBAAAO,MAAA,SAAAkN,GAAA,cAAAA,EAAApJ,KAAAoJ,EAAA1K,MAAA,KAAA,EAAA,GAClBuC,UAAS,CAAAmI,EAAA1K,KAAA,EAAA,KAAA,CAAA,OAAA0K,EAAA5K,OAAA,UAAA,KAAA,EASA,OANV5B,EAAI,KAINA,EAHIoM,aAAeN,QAAQvP,OAAS,GAGhCkQ,MAAMX,QAASM,aAAeN,QAAQvP,OAAS,GAAM,IAFrDmQ,YAAYZ,SAIlBM,cAAcI,EAAA5K,OAAA,SACP5B,EACJkB,MAAK,SAAA6J,GAAG,OAAIA,EAAI4B,MAAM,IACtBzL,KAAI,WAAA,IAAA0L,EAAA9I,kBAAA/E,sBAAA6D,MAAC,SAAAiK,EAAM9B,GAAG,OAAAhM,sBAAAO,MAAA,SAAAwN,GAAA,cAAAA,EAAA1J,KAAA0J,EAAAhL,MAAA,KAAA,EAAA,GACRiJ,EAAIgC,QAAO,CAAAD,EAAAhL,KAAA,EAAA,KAAA,CAAA,KAAS,oBAAmB,KAAA,EACE,OADFgL,EAAAX,GACxBf,eAAc0B,EAAAE,GAACjC,EAAIgC,QAAOD,EAAAhL,KAAA,EAAQuI,GAAGC,KAAK,gBAAe,KAAA,EAAA,GAAAwC,EAAAG,GAAAH,EAAArL,KAAAqL,EAAAG,GAAA,CAAAH,EAAAhL,KAAA,EAAA,KAAA,CAAAgL,EAAAG,GAAI1I,kBAAiB,KAAA,EAC7C,OAD6CuI,EAAAI,GAAAJ,EAAAG,GAAlG1I,mBAAiB,EAAAuI,EAAAX,IAAAW,EAAAE,GAAAF,EAAAI,IACjBjD,OAAON,GAAGjB,MAAK,GAAAnB,OAAIjD,WAAU,KAAAiD,OAAIhD,oBAAoBuI,EAAAhL,KAAA,GAC/CuI,GAAGY,MAAM,eAAgB1G,mBAAkB,KAAA,GAAA,IAAA,MAAA,OAAAuI,EAAAxJ,OAAA,GAAAuJ,EAAA,KAClD,OAAA,SAAAM,GAAA,OAAAP,EAAAxQ,MAAAkE,KAAAhE,UAAA,CAAA,CALI,IAKH,UACK,SAAAkM,GACLyB,OAAOzB,MAAM,yBAA2BA,EAAM4E,OAAS5E,GACzD,KAAE,KAAA,EAAA,IAAA,MAAA,OAAAgE,EAAAlJ,OAAA,GAAAiJ,EAAA,KACL,OAAA,WAtBqB,OAAAD,EAAAlQ,MAAAkE,KAAAhE,UAAA,CAAA,CAAA,GAuBtB+Q,YAAWvJ,kBAAA/E,sBAAA6D,MAAC,SAAA0K,IAAA,OAAAvO,sBAAAO,MAAA,SAAAiO,GAAA,cAAAA,EAAAnK,KAAAmK,EAAAzL,MAAA,KAAA,EAAA,OAAAyL,EAAAzL,KAAA,EACJuK,mBAAkB,KAAA,EAAA,IAAA,MAAA,OAAAkB,EAAAjK,OAAA,GAAAgK,EAAA,KACvB,KACHE,WAAU1J,kBAAA/E,sBAAA6D,MAAC,SAAA6K,IAAA,OAAA1O,sBAAAO,MAAA,SAAAoO,GAAA,cAAAA,EAAAtK,KAAAsK,EAAA5L,MAAA,KAAA,EAAA,OAAA4L,EAAA5L,KAAA,EACHuK,mBAAkB,KAAA,EAAA,IAAA,MAAA,OAAAqB,EAAApK,OAAA,GAAAmK,EAAA,KACvB,KACH,IAAME,gBAAe,WAAA,IAAAC,EAAA9J,kBAAA/E,sBAAA6D,MAAG,SAAAiL,IAAA,OAAA9O,sBAAAO,MAAA,SAAAwO,GAAA,cAAAA,EAAA1K,KAAA0K,EAAAhM,MAAA,KAAA,EAAA,OAAAgM,EAAAhM,KAAA,EAChBiK,kBAAiB,KAAA,EAAA,OAAA+B,EAAAlM,OAAA,SAChB6I,OAAOC,KAAKvG,WAAa,aAC7BjD,KAAI,WAAA,IAAA6M,EAAAjK,kBAAA/E,sBAAA6D,MAAC,SAAAoL,EAAgBrD,GAAK,IAAAsD,EAAA,OAAAlP,sBAAAO,MAAA,SAAA4O,GAAA,cAAAA,EAAA9K,KAAA8K,EAAApM,MAAA,KAAA,EAAA,OAAAoM,EAAApM,KAAA,EACduI,GAAGC,KAAK,QAAO,KAAA,EAAA,GAAA4D,EAAAzM,KAAA,CAAAyM,EAAApM,KAAA,EAAA,KAAA,CAAA,OAAAoM,EAAApM,KAAA,EAClBuI,GAAGY,MAAM,OAAQf,iBAAgB,KAAA,EAErC9F,YAAY7H,SACd0N,OAAOT,MAAM5E,MAAK,cAAA2C,OAAenD,YAAY7H,OAAM,YAC/C0R,EAAQ,EACZ7J,YAAY5H,SAAQ,SAAUqI,GAC5B8F,EAAMC,MAAM,IAAIC,QAAQhG,IAAM3D,MAAK,SAAUiN,GACvCA,EACFlE,OAAOvB,MAAK,cAAAnB,OAAe1C,KAE3BoF,OAAO1B,KAAI,cAAAhB,OAAe1C,IAC1B8F,EAAM1D,IAAI,IAAI4D,QAAQhG,OAExBoJ,IACc7J,YAAY7H,SACxB0N,OAAOvB,MAAK,aAAAnB,OAAcnD,YAAY7H,OAAM,YAC5C0N,OAAOT,MAAMC,MAEjB,GACF,KACD,KAAA,EAAA,IAAA,MAAA,OAAAyE,EAAA5K,OAAA,GAAA0K,EAAA,KACF,OAAA,SAAAI,GAAA,OAAAL,EAAA3R,MAAAkE,KAAAhE,UAAA,CAAA,CAvBI,IAuBH,UAAO,SAACkM,GACRyB,OAAOzB,MAAM,cAAgBA,EAAM4E,OAAS5E,GAC9C,KAAE,KAAA,EAAA,IAAA,MAAA,OAAAsF,EAAAxK,OAAA,GAAAuK,EAAA,KACL,OAAA,WA7BoB,OAAAD,EAAAxR,MAAAkE,KAAAhE,UAAA,CAAA,CAAA,GA8BrB0N,KAAKqE,iBAAiB,UAAS,WAAA,IAAAC,EAAAxK,kBAAA/E,sBAAA6D,MAAE,SAAA2L,EAAgB3J,GAAK,OAAA7F,sBAAAO,MAAA,SAAAkP,GAAA,cAAAA,EAAApL,KAAAoL,EAAA1M,MAAA,KAAA,EACpDmI,OAAON,GAAG/E,MAAM,0CAChB,IACEoF,KAAKyE,cACL7J,EAAM8J,UAAUf,mBAChB1D,OAAON,GAAGjB,MAAM,iCAClB,CAAE,MAAOF,GACPyB,OAAOzB,MAAM,cAAgBA,EAAM4E,OAAS5E,GAC9C,CAAC,KAAA,EAAA,IAAA,MAAA,OAAAgG,EAAAlL,OAAA,GAAAiL,EAAA,KACF,OAAA,SAAAI,GAAA,OAAAL,EAAAlS,MAAAkE,KAAAhE,UAAA,CAAA,CAT8B,IAU/B0N,KAAKqE,iBAAiB,WAAU,WAAA,IAAAO,EAAA9K,kBAAA/E,sBAAA6D,MAAE,SAAAiM,EAAMjK,GAAK,OAAA7F,sBAAAO,MAAA,SAAAwP,GAAA,cAAAA,EAAA1L,KAAA0L,EAAAhN,MAAA,KAAA,EAcvC,OAbJmI,OAAON,GAAG/E,MAAM,2CAA2CkK,EAAA1L,KAAA,EAEzDwB,EAAM8J,UACJjE,OAAO5O,OAAOqF,MAAK,SAACrF,GAClB,OAAOoH,QAAQ8L,IAAIlT,EAAKmT,KAAI,SAAC3I,GACtBA,EAAI4I,SAAS/K,sBAChBuG,OAAM,UAAQpE,GACd4D,OAAON,GAAGjB,MAAM,2BAA6BrC,GAEjD,IACF,IAAE,UAAO,SAACmC,GACRyB,OAAOzB,MAAM,eAAiBA,EAAM4E,OAAS5E,GAC/C,KACAsG,EAAAhN,KAAA,EACIkI,KAAKkF,QAAQC,QAAO,KAAA,EAC1BlF,OAAON,GAAGjB,MAAM,mCAAmCoG,EAAAhN,KAAA,GAAA,MAAA,KAAA,EAAAgN,EAAA1L,KAAA,EAAA0L,EAAA3C,GAAA2C,EAAA,SAAA,GAEnD7E,OAAOzB,MAAM,eAAiBsG,EAAA3C,GAAMiB,OAAK0B,EAAA3C,KAAY,KAAA,GAAA,IAAA,MAAA,OAAA2C,EAAAxL,OAAA,GAAAuL,EAAA,KAAA,CAAA,CAAA,EAAA,IAAA,KAExD,OAAA,SAAAO,GAAA,OAAAR,EAAAxS,MAAAkE,KAAAhE,UAAA,CAAA,CApB+B,IAqBhC0N,KAAKqE,iBAAiB,QAAO,WAAA,IAAAgB,EAAAvL,kBAAA/E,sBAAA6D,MAAE,SAAA0M,EAAM1K,GAAK,OAAA7F,sBAAAO,MAAA,SAAAiQ,GAAA,cAAAA,EAAAnM,KAAAmM,EAAAzN,MAAA,KAAA,EACxC8C,EAAM4K,YACJ/K,YAAYG,GAAM,UAAO,SAAC4D,GACxByB,OAAOzB,MAAM,WAAa5D,EAAMG,QAAQF,IAAM,cAAgB2D,EAAM4E,OAAS5E,GAC/E,KACD,KAAA,EAAA,IAAA,MAAA,OAAA+G,EAAAjM,OAAA,GAAAgM,EAAA,KACF,OAAA,SAAAG,GAAA,OAAAJ,EAAAjT,MAAAkE,KAAAhE,UAAA,CAAA,CAN4B,IAS7B,IAAM0I,YAAW,WAAA,IAAA0K,EAAA5L,kBAAA/E,sBAAA6D,MAAG,SAAA+M,EAAO/K,GAAK,OAAA7F,sBAAAO,MAAA,SAAAsQ,GAAA,cAAAA,EAAAxM,KAAAwM,EAAA9N,MAAA,KAAA,EAGX,OAFnBmI,OAAOT,MAAMb,KAAK,gBAAkB,IAAIkH,IAAIjL,EAAMG,QAAQF,KAAKiL,UAC/D7F,OAAO1B,KAAK,yBAA2B3D,EAAMG,QAAQF,KACrDoF,OAAOT,MAAMC,MAAMmG,EAAAhO,OAAA,SACZ6K,MAAM7H,EAAMG,UAAQ,KAAA,EAAA,IAAA,MAAA,OAAA6K,EAAAtM,OAAA,GAAAqM,EAAA,KAC5B,OAAA,SALgBI,GAAA,OAAAL,EAAAtT,MAAAkE,KAAAhE,UAAA,CAAA,CAAA,GAMX2I,WAAU,WAAA,IAAA+K,EAAAlM,kBAAA/E,sBAAA6D,MAAG,SAAAqN,EAAOrL,GAAK,OAAA7F,sBAAAO,MAAA,SAAA4Q,GAAA,cAAAA,EAAA9M,KAAA8M,EAAApO,MAAA,KAAA,EAAA,OAAAoO,EAAAtO,OAAA,SACtB6I,OAAOG,MAAMhG,EAAMG,SAAS7D,MAAK,SAAUiP,GAGhD,OAFAlG,OAAOT,MAAMb,KAAK,eAAiB,IAAIkH,IAAIjL,EAAMG,QAAQF,KAAKiL,UAC9D7F,OAAO1B,KAAK,yBAA2B3D,EAAMG,QAAQF,KACjDsL,GACFlG,OAAOT,MAAMd,MAAK,aAClBnC,QAAQoB,IAAIwI,GACZlG,OAAOT,MAAMC,MACbQ,OAAOT,MAAMC,MACb7E,EAAM8J,UAAU0B,aAAaxL,EAAMG,UAC5BoL,IAEPlG,OAAOxB,KAAI,cACXwB,OAAOT,MAAMC,MACN2G,aAAaxL,EAAMG,SAE9B,KAAE,KAAA,EAAA,IAAA,MAAA,OAAAmL,EAAA5M,OAAA,GAAA2M,EAAA,KACH,OAAA,SAjBeI,GAAA,OAAAL,EAAA5T,MAAAkE,KAAAhE,UAAA,CAAA,CAAA,GAkBV4I,YAAW,WAAA,IAAAoL,EAAAxM,kBAAA/E,sBAAA6D,MAAG,SAAA2N,EAAO3L,GAAK,OAAA7F,sBAAAO,MAAA,SAAAkR,GAAA,cAAAA,EAAApN,KAAAoN,EAAA1O,MAAA,KAAA,EAAA,OAAA0O,EAAA5O,OAAA,SACvB6I,OAAOG,MAAMhG,EAAMG,SAAS7D,MAAK,SAAUiP,GAGhD,OAFAlG,OAAOT,MAAMb,KAAK,gBAAkB,IAAIkH,IAAIjL,EAAMG,QAAQF,KAAKiL,UAC/D7F,OAAO1B,KAAK,yBAA2B3D,EAAMG,QAAQF,KACjDsL,GACFlG,OAAOT,MAAMd,MAAK,aAClBnC,QAAQoB,IAAIwI,GACZlG,OAAOT,MAAMC,MACbQ,OAAOT,MAAMC,MACN0G,IAEPlG,OAAOxB,KAAI,cACXwB,OAAOT,MAAMC,MACN2G,aAAaxL,EAAMG,SAE9B,KAAE,KAAA,EAAA,IAAA,MAAA,OAAAyL,EAAAlN,OAAA,GAAAiN,EAAA,KACH,OAAA,SAhBgBE,GAAA,OAAAH,EAAAlU,MAAAkE,KAAAhE,UAAA,CAAA,CAAA,GAkBXoU,WAAU,WAAA,IAAAC,EAAA7M,kBAAA/E,sBAAA6D,MAAG,SAAAgO,EAAOhM,GAAK,OAAA7F,sBAAAO,MAAA,SAAAuR,GAAA,cAAAA,EAAAzN,KAAAyN,EAAA/O,MAAA,KAAA,EAAA,OAAA+O,EAAAjP,OAAA,SACtB6I,OAAOG,MAAMhG,EAAMG,SAAS7D,MAAK,SAAUiP,GAEhD,OADAlG,OAAOT,MAAMb,KAAK,yBAA2B/D,EAAMG,QAAQF,KACvDsL,GACFlG,OAAOT,MAAMd,MAAK,aAClBnC,QAAQoB,IAAIwI,GACZlG,OAAOT,MAAMC,MACbQ,OAAOT,MAAMC,MACN0G,IAEPlG,OAAOxB,KAAI,cACXwB,OAAOT,MAAMC,MACN2G,aAAaxL,EAAMG,SAE9B,KAAE,KAAA,EAAA,IAAA,MAAA,OAAA8L,EAAAvN,OAAA,GAAAsN,EAAA,KACH,OAAA,SAfeE,GAAA,OAAAH,EAAAvU,MAAAkE,KAAAhE,UAAA,CAAA,CAAA,GAef,SACc8T,aAAYW,GAAA,OAAAC,cAAA5U,MAAAkE,KAAAhE,UAAA,CAAA,SAAA0U,gBAyB1B,OAzB0BA,cAAAlN,kBAAA/E,sBAAA6D,MAA3B,SAAAqO,EAA4BlM,GAAO,IAAAF,EAAAsJ,EAAA,OAAApP,sBAAAO,MAAA,SAAA4R,GAAA,cAAAA,EAAA9N,KAAA8N,EAAApP,MAAA,KAAA,EACD,OAA1B+C,EAAM,IAAIgL,IAAI9K,EAAQF,KAAIqM,EAAApP,KAAA,EACXqP,SAASpM,GAAQ,KAAA,EAA1B,GAARoJ,EAAQ+C,EAAAzP,KACC,CAAAyP,EAAApP,KAAA,EAAA,KAAA,CAAA,OAAAoP,EAAApP,KAAA,EACM2K,MAAM1H,GAAQ,UAAO,WAAA,OAAM,IAAI,IAAC,KAAA,EAAjDoJ,EAAQ+C,EAAAzP,KAAA,KAAA,EAIY,GAFtBwI,OAAOT,MAAM5E,MAAK,iBAAA2C,OAAkB1C,EAAIiL,WACxC7F,OAAO1B,KAAI,gBAAAhB,OAAiBxC,EAAQF,MACpC0B,QAAQoB,IAAIwG,GAEW,QAAnBpJ,EAAQzD,QAAqC,UAAhBuD,EAAIuM,SAAqB,CAAAF,EAAApP,KAAA,GAAA,KAAA,CAAA,OAAAoP,EAAApP,KAAA,GACpC2I,OAAOC,KAAKvG,WAAa,YAAW,KAAA,GAA7C+M,EAAAzP,KACLyJ,IAAInG,EAASoJ,EAASkD,SAAQ,UAAO,SAAA7I,GACzCyB,OAAOzB,MAAM,oBAAsBA,EAAM4E,OAAS5E,IAC/B,uBAAfA,EAAM7J,OACR8L,OAAM,UAAQtG,WAAa,YAC3B8F,OAAOvB,MAAM,iBAEjB,IACAuB,OAAOvB,MAAK,eAAAnB,OAAgBxC,EAAQF,MAAOqM,EAAApP,KAAA,GAAA,MAAA,KAAA,GAE3CmI,OAAOxB,KAAI,mBAAAlB,OAAoBxC,EAAQF,MAAO,KAAA,GAE7B,OAAnBoF,OAAOT,MAAMC,MAAMyH,EAAAtP,OAAA,SACZuM,GAAQ,KAAA,GAAA,IAAA,MAAA,OAAA+C,EAAA5N,OAAA,GAAA2N,EAAA,MAChB7U,MAAAkE,KAAAhE,UAAA,CAED,IAAM6U,SAAQ,WAAA,IAAAG,EAAAxN,kBAAA/E,sBAAA6D,MAAG,SAAA2O,EAAOC,GAAG,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAApN,EAAAqN,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAxH,EAAAyH,EAAAC,EAAA,OAAA1T,sBAAAO,MAAA,SAAAoT,GAAA,cAAAA,EAAAtP,KAAAsP,EAAA5Q,MAAA,KAAA,EAEM,GADzB2P,EAAMkB,UAASjB,EACeD,EAAImB,YAAcnB,EAAIoB,eAAiBpB,EAAIqB,kBAAoB,CAAC,EAA5FnB,EAAQD,EAARC,SAAUC,EAAaF,EAAbE,eACdD,IAAY,KAAK9S,KAAK+S,GAAc,CAAAc,EAAA5Q,KAAA,EAAA,KAAA,CACS,OAA/CmI,OAAOxB,KAAK,mCAAmCiK,EAAA9Q,OAAA,SACxC6K,MAAM+E,IAAI,KAAA,EAOnB,GALMK,EAAO,GACTC,EAAS,IAAIjC,IAAI2B,EAAI3M,KACrBkN,EAAWD,EAAOhC,SAASvE,MAAM,KAAK,GACtCyG,EAAc,GAEd3N,WAAa,IAAI0O,OAAOC,SAASC,QAAQpU,KAAK2S,EAAI3M,KAAM,CAE1D,IAAWwB,KADX4D,OAAOT,MAAMd,MAAM,qBAAuB8I,EAAI3M,KAC5BO,IAAIQ,IAChBf,EAAMO,IAAIQ,IAAIS,GAAO,IAAM/B,WAAa,IAAMC,kBAAoBiN,EAAI3M,IAAIgF,QAAQmJ,SAASC,OAAQ,IACvGpO,EAAMqO,SAASA,SAASrO,IACxB0B,QAAQoB,IAAI9C,GACZgN,EAAK1V,KAAK0I,GAEZoF,OAAOT,MAAMC,KACf,CAAC,GACIoI,EAAKtV,OAAM,CAAAmW,EAAA5Q,KAAA,GAAA,KAAA,CAAAoQ,EAAA,EAAAC,EACK/L,eAAc,KAAA,GAAA,KAAA8L,EAAAC,EAAA5V,QAAA,CAAAmW,EAAA5Q,KAAA,GAAA,KAAA,CAAlB,GAAJsQ,EAAID,EAAAD,IACT,IAAIa,OAAOX,EAAK/L,KAAKxH,KAAK2S,EAAI3M,KAAI,CAAA6N,EAAA5Q,KAAA,GAAA,KAAA,CAEe,OADnDiQ,EAAWK,EAAKxS,KAChBoS,EAAc,IAAIe,OAAOX,EAAK/L,KAAK8M,KAAK3B,EAAI3M,KAAK,GAAE6N,EAAA9Q,OAAA,QAAA,IAAA,KAAA,GAAAsQ,IAAAQ,EAAA5Q,KAAA,GAAA,MAAA,KAAA,GAIvD,IAAWlC,KAAQwF,IACjB,GAAIxF,IAASmS,EAAU,CAErB,IAAW1L,KADX4D,OAAOT,MAAMd,MAAM,aAAAnB,OAAawK,EAAQ,MAAOP,EAAI3M,KACjCO,IAAIxF,GACdiF,EAAMO,IAAIxF,GAAMyG,GAAOmL,EAAI3M,IAAIgF,QAAQmI,EAAa,IAC1DzL,QAAQoB,IAAI9C,GACZgN,EAAK1V,KAAK0I,GAEZoF,OAAOT,MAAMC,KACf,CACD,KAAA,GAmBF,OAdCsB,EADE8G,EAAKtV,OACDmQ,YAAYmF,GAEZpF,MAAM+E,KACHnN,WAAa,IAAI0O,OAAOC,SAASC,QAAQpU,KAAK2S,EAAI3M,OACrD2N,EAAMU,SAASA,SAAS1B,EAAI3M,MAAM0G,MAAM,KAAKpI,MAC7CsP,EAAcW,eAAeZ,GACnCzH,EAAMA,EACH7J,MAAK,SAAA6J,GAAG,OAAIA,EAAIsI,aAAa,IAC7BnS,MAAK,SAAAoS,GAAM,OAAI,IAAInI,SAASmI,EAAQ,CACnCC,QAAS,CACP,eAAgBd,IAElB,IAAC,UACI,WAAA,OAAM,IAAI,KACpBC,EAAA9Q,OAAA,SACMmJ,GAAG,KAAA,GAAA,IAAA,MAAA,OAAA2H,EAAApP,OAAA,GAAAiO,EAAA,KACX,OAAA,SA7DaiC,GAAA,OAAAlC,EAAAlV,MAAAkE,KAAAhE,UAAA,CAAA,CAAA,GA+DR4W,SAAW,SAACrO,GAEhB,IADAA,EAAMA,EAAI0G,MAAM,KAAK,GAAGA,MAAM,KAAK,IAC3BkI,SAAS,KACf5O,GAAO,iBACF,CACL,IAAM6O,EAAO7O,EAAI0G,MAAM,MAEI,IADdmI,EAAKA,EAAKnX,OAAS,GACvBoX,QAAQ,OACf9O,GAAO,QAEX,CACA,OAAOA,CACT,EAAC,SACc+O,SAAQC,GAAA,OAAAC,UAAA1X,MAAAkE,KAAAhE,UAAA,CAAA,SAAAwX,YAKtB,OALsBA,UAAAhQ,kBAAA/E,sBAAA6D,MAAvB,SAAAmR,EAAwBhJ,GAAG,OAAAhM,sBAAAO,MAAA,SAAA0U,GAAA,cAAAA,EAAA5Q,KAAA4Q,EAAAlS,MAAA,KAAA,EACN,OADMkS,EAAA7H,GACdhB,SAAQ6I,EAAAlS,KAAA,EAAOiJ,EAAIsI,cAAa,KAAA,EAG1C,OAH0CW,EAAAhH,GAAAgH,EAAAvS,KAAAuS,EAAA/G,GAAE,CAC3CgH,OAAQlJ,EAAIkJ,OACZV,QAASxI,EAAIwI,SACdS,EAAApS,OAAA,SAAA,IAAAoS,EAAA7H,GAAA6H,EAAAhH,GAAAgH,EAAA/G,KAAA,KAAA,EAAA,IAAA,MAAA,OAAA+G,EAAA1Q,OAAA,GAAAyQ,EAAA,MACF3X,MAAAkE,KAAAhE,UAAA,CAED,SAAS4X,mBACPjR,QAAQkR,IAAM,SAAUC,GACtB,OAAO,IAAInR,SAAQ,SAACjC,EAASwJ,GAE3B,IAAIiB,GADJ2I,EAAWrW,MAAMC,QAAQoW,GAAYA,EAAW,IAC7B7X,OACf8X,EAAO,GACX,GAAY,IAAR5I,EAAW,OAAOjB,EAAO,IAAI8J,eAAe,+BAChDF,EAAS5X,SAAQ,SAAC6D,GACZA,aAAa4C,QACf5C,EAAEa,MACA,SAAC6J,GAAG,OAAK/J,EAAQ+J,EAAI,IACrB,SAACwJ,GACC9I,IACA4I,EAAKlY,KAAKoY,GACE,IAAR9I,GAAWjB,EAAO,IAAI8J,eAAeD,GAC3C,IAGF7J,EAAOnK,EAEX,GACF,GACF,CACF,CAEA,SAASmU,SAASC,GAChB,IAAMC,EAAa,IAAIC,gBAEvB,OAAOF,EAAKzF,KAAI,SAAAwC,GACd,OAAO,IAAIvO,SAAQ,SAACjC,EAASwJ,GAC3BiC,MAAM+E,EAAK,CACToD,OAAQF,EAAWE,SAElB1T,KAAK0S,UACL1S,MAAK,SAAA6J,GACJ2J,EAAWG,QACQ,MAAf9J,EAAIkJ,OACNzJ,EAAO,MAEPxJ,EAAQ+J,EACZ,IAAE,UACK,WAAA,OAAMP,EAAO,KAAK,GAC7B,GACF,GACF,CAEA,SAASsK,cAAcL,GACrB,IAAMM,EAAa,IAAIC,MAAM,sBACvBC,EAAc,IAAIC,YAExB,OAAOT,EAAKzF,IAAG,WAAA,IAAAmG,EAAArR,kBAAA/E,sBAAA6D,MAAC,SAAAwS,EAAM5D,GAAG,IAAAkD,EAAAW,EAAA,OAAAtW,sBAAAO,MAAA,SAAAgW,GAAA,cAAAA,EAAAlS,KAAAkS,EAAAxT,MAAA,KAAA,EAKrB,OAJI4S,EAAa,IAAIC,gBACnBU,GAAS,EACbJ,EAAY5G,iBAAiB0G,EAAWnV,MAAM,WACvCyV,GAAQX,EAAWG,OAC1B,IAAES,EAAA1T,OAAA,SACK,IAAIqB,SAAQ,SAACjC,EAASwJ,GAC3BiC,MAAM+E,EAAK,CACToD,OAAQF,EAAWE,SAClB1T,MAAK,SAAA6J,GACNsK,GAAS,EACTJ,EAAYM,cAAcR,GACP,MAAfhK,EAAIkJ,OACNzJ,EAAO,MAEPxJ,EAAQ+J,EACZ,IAAE,UAAO,WAAA,OAAMP,EAAO,KAAK,GAC7B,KAAE,KAAA,EAAA,IAAA,MAAA,OAAA8K,EAAAhS,OAAA,GAAA8R,EAAA,KACH,OAAA,SAAAI,GAAA,OAAAL,EAAA/Y,MAAAkE,KAAAhE,UAAA,CAAA,CAlBc,GAmBjB,CAEA,IAAMoQ,YAAc,SAAC+H,GAEnB,OADKxR,QAAQkR,KAAKD,mBACXjR,QAAQkR,IAAIW,cAAcL,IAAOvT,MAAK,SAAA6J,GAAG,OAAIA,CAAG,IAAC,UAC/C,SAACtP,GACN,MAAS,8CAALA,EACKwH,QAAQkR,IAAIK,SAASC,IACzBvT,MAAK,SAAC6J,GAAG,OAAKA,CAAG,IAAC,UACZ,WAAA,OAAM,IAAI,IAEd,IACT,GACJ,EAEMqI,eAAiB,SAACZ,GACtB,OAAQA,GACN,IAAK,KACH,MAAO,kBACT,IAAK,OACH,MAAO,YACT,IAAK,MACH,MAAO,WACT,IAAK,OAkBL,IAAK,MACH,MAAO,mBAjBT,IAAK,OACH,MAAO,aACT,IAAK,MACH,MAAO,YACT,IAAK,OACH,MAAO,aACT,IAAK,MACH,MAAO,YACT,IAAK,MACH,MAAO,YACT,IAAK,MAEL,IAAK,MACH,MAAO,WACT,IAAK,cACH,MAAO,mBAGT,IAAK,QAEL,IAAK,OACH,MAAO,qBACT,IAAK,MACH,MAAO,YACT,IAAK,MACH,MAAO,2BACT,IAAK,OAEL,IAAK,MACH,MAAO,aACT,IAAK,MAEL,IAAK,OACH,MAAO,gBACT,IAAK,OACH,MAAO,wBACT,IAAK,QACH,MAAO,yBACT,IAAK,MACH,MAAO,uBACT,IAAK,MACH,MAAO,uBACT,IAAK,MACH,MAAO,gCACT,IAAK,MACH,MAAO,kBACT,IAAK,MACH,MAAO,oBACT,IAAK,KACH,MAAO,mBACT,IAAK,MACH,MAAO,sBACT,IAAK,MACH,MAAO,+BACT,IAAK,KACH,MAAO,8BACT,IAAK,MACH,MAAO,qBACT,IAAK,OACH,MAAO,0EACT,IAAK,MACH,MAAO,2BACT,IAAK,OACH,MAAO,oEACT,IAAK,MACH,MAAO,gCACT,IAAK,OACH,MAAO,4EACT,IAAK,MACH,MAAO,kBACT,IAAK,MAkEL,QACE,MAAO,aAjET,IAAK,MACH,MAAO,kBACT,IAAK,MACH,MAAO,aACT,IAAK,MACH,MAAO,cACT,IAAK,MACH,MAAO,YACT,IAAK,MACH,MAAO,YACT,IAAK,MACH,MAAO,cACT,IAAK,MACH,MAAO,kBACT,IAAK,MACH,MAAO,kBACT,IAAK,MACH,MAAO,iBACT,IAAK,MACH,MAAO,cACT,IAAK,MACH,MAAO,gCACT,IAAK,MAEL,IAAK,OAEL,IAAK,MAEL,IAAK,MAEL,IAAK,MACH,MAAO,aACT,IAAK,MACH,MAAO,YACT,IAAK,MACH,MAAO,YACT,IAAK,MACH,MAAO,kBACT,IAAK,OACH,MAAO,gCACT,IAAK,MACH,MAAO,gBACT,IAAK,MACH,MAAO,oBACT,IAAK,MACH,MAAO,iBACT,IAAK,OACH,MAAO,aACT,IAAK,MAEL,IAAK,OAEL,IAAK,OACH,MAAO,eACT,IAAK,KAEL,IAAK,MACH,MAAO,cACT,IAAK,MAEL,IAAK,OAEL,IAAK,MACH,MAAO,aAIb","file":"../volantis-sw.js","sourcesContent":["// 全站打包上传 npm，sw 并发请求 cdn\nconst prefix = 'volantis-nanaeo';\nconst cacheSuffixVersion = '00000040-::cacheSuffixVersion::';\nconst CACHE_NAME = prefix + '-v' + cacheSuffixVersion;\nconst PreCachlist = [\n  \"/css/style.css\",\n  \"/js/app.js\",\n  \"/js/search/hexo.js\",\n];\nlet NPMMirror = false;\nconst NPMPackage = \"@mlikiowa/nanaeo\";\nlet NPMPackageVersion = \"1.0.1731067262693\";\nlet debug = true;\n// location.hostname == 'localhost' && (debug = true) && (NPMMirror = false);\nconst handleFetch = async (event) => {\n  const url = event.request.url;\n  if (/nocache/.test(url)) {\n    return NetworkOnly(event)\n  } else if (/@latest/.test(url)) {\n    return CacheFirst(event)\n  } else if (/cdnjs\\.cloudflare\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/music\\.126\\.net/.test(url)) {\n    return CacheAlways(event)\n  } else if (/qqmusic\\.qq\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/jsdelivr\\.net/.test(url)) {\n    return CacheAlways(event)\n  } else if (/npm\\.elemecdn\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/unpkg\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/.*\\.(?:png|jpg|jpeg|svg|gif|webp|ico|eot|ttf|woff|woff2|mp3)$/.test(url)) {\n    return CacheAlways(event)\n  } else if (/.*\\.(css|js)$/.test(url)) {\n    return CacheAlways(event)\n  } else {\n    return CacheFirst(event)\n  }\n}\nconst cdn = {\n  gh: {\n    jsdelivr: 'https://cdn.jsdelivr.net/gh',\n    fastly: 'https://fastly.jsdelivr.net/gh',\n    gcore: 'https://gcore.jsdelivr.net/gh',\n    testingcf: 'https://testingcf.jsdelivr.net/gh',\n    test1: 'https://test1.jsdelivr.net/gh',\n  },\n  combine: {\n    jsdelivr: 'https://cdn.jsdelivr.net/combine',\n    fastly: 'https://fastly.jsdelivr.net/combine',\n    gcore: 'https://gcore.jsdelivr.net/combine',\n    testingcf: 'https://testingcf.jsdelivr.net/combine',\n    test1: 'https://test1.jsdelivr.net/combine',\n  },\n  npm: {\n    jsdelivr: 'https://cdn.jsdelivr.net/npm',\n    fastly: 'https://fastly.jsdelivr.net/npm',\n    gcore: 'https://gcore.jsdelivr.net/npm',\n    testingcf: 'https://testingcf.jsdelivr.net/npm',\n    test1: 'https://test1.jsdelivr.net/npm',\n    unpkg: 'https://unpkg.com',\n    eleme: 'https://npm.elemecdn.com',\n  },\n  cdnjs: {\n    cdnjs: 'https://cdnjs.cloudflare.com/ajax/libs',\n    baomitu: 'https://lib.baomitu.com',\n    bootcdn: 'https://cdn.bootcdn.net/ajax/libs',\n    bytedance: 'https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M',\n    sustech: 'https://mirrors.sustech.edu.cn/cdnjs/ajax/libs',\n  }\n}\nconst cdn_match_list = []\nfor (const type in cdn) {\n  for (const key in cdn[type]) {\n    cdn_match_list.push({ type: type, key: cdn[type][key] })\n  }\n}\nconst _console = console;\nconst color = {\n  black: '#000000',\n  red: '#FF0000',\n  green: '#008000',\n  yellow: '#FFFF00',\n  blue: '#0000FF',\n  magenta: '#FF00FF',\n  cyan: '#00FFFF',\n  white: '#FFFFFF',\n};\nconst add = (...arr) => {\n  let fi = [\n    []\n  ];\n  for (let key = 0; key < arr.length; key++) {\n    const [first, ...other] = arr[key];\n    fi[0] += first;\n    fi = fi.concat(other);\n  }\n  return fi;\n};\nconst createlog = (util) => (...args) => {\n  // const fun = _console[util] ? _console[util] : _console.log;\n  const fun = util == \"error\" ? _console[util] : _console.log;\n  fun.apply(void 0, args);\n};\nconst creategroup = (util) => (...args) => {\n  const fun = _console.groupCollapsed;\n  fun.apply(void 0, args);\n};\nconst colorUtils = {\n  bold: (str) => {\n    if (typeof str === 'string' || typeof str === 'number') {\n      return `${str};font-weight: bold;`;\n    }\n    for (let key = 1; key < str.length; key++) {\n      str[key] += `;font-weight: bold;`;\n    }\n    return str;\n  }\n};\nconst colorHash = {\n  log: 'black',\n  wait: 'cyan',\n  error: 'red',\n  warn: 'yellow',\n  ready: 'green',\n  info: 'blue',\n  event: 'magenta',\n};\nconst createChalk = (name) => (...str) => {\n  if (typeof str[0] === 'object') {\n    createlog(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), ...str));\n    return;\n  }\n  let strArr = str;\n  if (typeof str === 'string' || typeof str === 'number') {\n    strArr = colorUtils[colorHash[name]](str);\n  }\n  createlog(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), strArr));\n};\nconst createChalkBg = (name) => (...str) => {\n  if (typeof str[0] === 'object') {\n    createlog(name)(...add(colorUtils.bold(colorUtils[`bg${firstToUpperCase(colorHash[name])}`](`[${firstToUpperCase(name)}] `)), ...str));\n    return;\n  }\n  let strArr = str;\n  if (typeof str === 'string' || typeof str === 'number') {\n    strArr = colorUtils[colorHash[name]](str);\n  }\n  createlog(name)(...add(colorUtils.bold(colorUtils[`bg${firstToUpperCase(colorHash[name])}`](`[${firstToUpperCase(name)}] `)), strArr));\n};\nconst createChalkGroup = (name) => (...str) => {\n  if (typeof str[0] === 'object') {\n    creategroup(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), ...str));\n    return;\n  }\n  let strArr = str;\n  if (typeof str === 'string' || typeof str === 'number') {\n    strArr = colorUtils[colorHash[name]](str);\n  }\n  creategroup(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), strArr));\n};\nconst chalk = {\n  group: {\n    end: _console.groupEnd\n  },\n  bg: {}\n};\nObject.keys(colorHash).forEach(key => {\n  chalk[key] = createChalk(key);\n  chalk.group[key] = createChalkGroup(key);\n  chalk.bg[key] = createChalkBg(key);\n});\nconst firstToUpperCase = (str) => str.toLowerCase().replace(/( |^)[a-z]/g, (L) => L.toUpperCase());\nObject.keys(color).forEach(key => {\n  colorUtils[key] = (str) => {\n    if (typeof str === 'string' || typeof str === 'number') {\n      return [`%c${str}`, `color:${color[key]}`];\n    }\n    for (let i = 1; i < str.length; i++) {\n      str[i] += `;color:${color[key]}`;\n    }\n    return str;\n  };\n  colorUtils[`bg${firstToUpperCase(key)}`] = (str) => {\n    if (typeof str === 'string' || typeof str === 'number') {\n      return [`%c${str}`, `padding: 2px 4px; border-radius: 3px; color: ${key === 'white' ? '#000' : '#fff'}; font-weight: bold; background:${color[key]};`];\n    }\n    for (let i = 1; i < str.length; i++) {\n      str[i] += `;padding: 2px 4px; border-radius: 3px; font-weight: bold; background:${color[key]};`;\n    }\n    return str;\n  };\n});\nself.logger = {\n  add,\n  ...chalk,\n  ...colorUtils,\n};\n\nif (!debug) {\n  logger = {\n    log: () => { },\n    wait: () => { },\n    error: () => { },\n    warn: () => { },\n    ready: () => { },\n    info: () => { },\n    event: () => { },\n    group: {\n      log: () => { },\n      wait: () => { },\n      error: () => { },\n      warn: () => { },\n      ready: () => { },\n      info: () => { },\n      event: () => { },\n      end: () => { },\n    },\n    bg: {\n      log: () => { },\n      wait: () => { },\n      error: () => { },\n      warn: () => { },\n      ready: () => { },\n      info: () => { },\n      event: () => { },\n    }\n  };\n  console.log = () => { };\n}\n\nconst generate_uuid = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\nself.db = {\n  read: (key, config) => {\n    if (!config) { config = { type: \"text\" } }\n    return new Promise((resolve, reject) => {\n      caches.open(CACHE_NAME).then(cache => {\n        cache.match(new Request(`https://LOCALCACHE/${encodeURIComponent(key)}`)).then(function (res) {\n          if (!res) resolve(null)\n          res.text().then(text => resolve(text))\n        }).catch(() => {\n          resolve(null)\n        })\n      })\n    })\n  },\n  write: (key, value) => {\n    return new Promise((resolve, reject) => {\n      caches.open(CACHE_NAME).then(function (cache) {\n        cache.put(new Request(`https://LOCALCACHE/${encodeURIComponent(key)}`), new Response(value));\n        resolve()\n      }).catch(() => {\n        reject()\n      })\n    })\n  }\n}\nconst compareVersion = (a, b) => {\n  let v1 = a.split('.');\n  let v2 = b.split('.');\n  const len = Math.max(v1.length, v2.length);\n  while (v1.length < len) {\n    v1.push('0');\n  }\n  while (v2.length < len) {\n    v2.push('0');\n  }\n  for (let i = 0; i < len; i++) {\n    const num1 = parseInt(v1[i]);\n    const num2 = parseInt(v2[i]);\n    if (num1 > num2) {\n      return a;\n    } else if (num1 < num2) {\n      return b;\n    }\n  }\n  return a;\n}\n\nconst mirrors = [\n  `https://registry.npmjs.org/${NPMPackage}/latest`,\n  `https://registry.npmmirror.com/${NPMPackage}/latest`,\n  `https://mirrors.cloud.tencent.com/npm/${NPMPackage}/latest`\n]\nconst getLocalVersion = async () => {\n  NPMPackageVersion = await db.read('blog_version') || NPMPackageVersion\n  logger.bg.info(`Local Version: ${NPMPackage}@${NPMPackageVersion}`)\n}\nlet mirror_time = 0;\nconst setNewestVersion = async () => {\n  if (!NPMMirror) {\n    return\n  }\n  let f = null;\n  if (!(mirror_time % (mirrors.length + 1))) {\n    f = FetchEngine(mirrors);\n  } else {\n    f = fetch(mirrors[(mirror_time % (mirrors.length + 1)) - 1]);\n  }\n  mirror_time++;\n  return f\n    .then(res => res.json())\n    .then(async res => {\n      if (!res.version) throw ('No Version Found!')\n      NPMPackageVersion = compareVersion(res.version, await db.read('blog_version') || NPMPackageVersion)\n      logger.bg.ready(`${NPMPackage}@${NPMPackageVersion}`)\n      await db.write('blog_version', NPMPackageVersion)\n    })\n    .catch(error => {\n      logger.error('[Set Newest Version] ' + (error.stack || error))\n    })\n}\nsetInterval(async () => {\n  await setNewestVersion()\n}, 60 * 1000);\nsetTimeout(async () => {\n  await setNewestVersion()\n}, 5000)\nconst installFunction = async () => {\n  await getLocalVersion();\n  return caches.open(CACHE_NAME + \"-precache\")\n    .then(async function (cache) {\n      if (!await db.read('uuid')) {\n        await db.write('uuid', generate_uuid())\n      }\n      if (PreCachlist.length) {\n        logger.group.event(`Precaching ${PreCachlist.length} files.`);\n        let index = 0;\n        PreCachlist.forEach(function (url) {\n          cache.match(new Request(url)).then(function (response) {\n            if (response) {\n              logger.ready(`Precaching ${url}`);\n            } else {\n              logger.wait(`Precaching ${url}`);\n              cache.add(new Request(url));\n            }\n            index++;\n            if (index === PreCachlist.length) {\n              logger.ready(`Precached ${PreCachlist.length} files.`);\n              logger.group.end();\n            }\n          })\n        })\n      }\n    }).catch((error) => {\n      logger.error('[install] ' + (error.stack || error));\n    })\n}\nself.addEventListener('install', async function (event) {\n  logger.bg.event(\"service worker install event listening\");\n  try {\n    self.skipWaiting();\n    event.waitUntil(installFunction());\n    logger.bg.ready('service worker install sucess!');\n  } catch (error) {\n    logger.error('[install] ' + (error.stack || error));\n  }\n});\nself.addEventListener('activate', async event => {\n  logger.bg.event(\"service worker activate event listening\");\n  try {\n    event.waitUntil(\n      caches.keys().then((keys) => {\n        return Promise.all(keys.map((key) => {\n          if (!key.includes(cacheSuffixVersion)) {\n            caches.delete(key);\n            logger.bg.ready('Deleted Outdated Cache: ' + key);\n          }\n        }));\n      }).catch((error) => {\n        logger.error('[activate] ' + (error.stack || error));\n      })\n    );\n    await self.clients.claim()\n    logger.bg.ready('service worker activate sucess!');\n  } catch (error) {\n    logger.error('[activate] ' + (error.stack || error));\n  }\n})\nself.addEventListener('fetch', async event => {\n  event.respondWith(\n    handleFetch(event).catch((error) => {\n      logger.error('[fetch] ' + event.request.url + '\\n[error] ' + (error.stack || error));\n    })\n  )\n});\n\n\nconst NetworkOnly = async (event) => {\n  logger.group.info('NetworkOnly: ' + new URL(event.request.url).pathname);\n  logger.wait('service worker fetch: ' + event.request.url)\n  logger.group.end();\n  return fetch(event.request)\n}\nconst CacheFirst = async (event) => {\n  return caches.match(event.request).then(function (resp) {\n    logger.group.info('CacheFirst: ' + new URL(event.request.url).pathname);\n    logger.wait('service worker fetch: ' + event.request.url)\n    if (resp) {\n      logger.group.ready(`Cache Hit`);\n      console.log(resp)\n      logger.group.end();\n      logger.group.end();\n      event.waitUntil(CacheRuntime(event.request))\n      return resp;\n    } else {\n      logger.warn(`Cache Miss`);\n      logger.group.end();\n      return CacheRuntime(event.request)\n    }\n  })\n}\nconst CacheAlways = async (event) => {\n  return caches.match(event.request).then(function (resp) {\n    logger.group.info('CacheAlways: ' + new URL(event.request.url).pathname);\n    logger.wait('service worker fetch: ' + event.request.url)\n    if (resp) {\n      logger.group.ready(`Cache Hit`);\n      console.log(resp)\n      logger.group.end();\n      logger.group.end();\n      return resp;\n    } else {\n      logger.warn(`Cache Miss`);\n      logger.group.end();\n      return CacheRuntime(event.request)\n    }\n  })\n}\n\nconst matchCache = async (event) => {\n  return caches.match(event.request).then(function (resp) {\n    logger.group.info('service worker fetch: ' + event.request.url)\n    if (resp) {\n      logger.group.ready(`Cache Hit`);\n      console.log(resp)\n      logger.group.end();\n      logger.group.end();\n      return resp;\n    } else {\n      logger.warn(`Cache Miss`);\n      logger.group.end();\n      return CacheRuntime(event.request)\n    }\n  })\n}\nasync function CacheRuntime(request) {\n  const url = new URL(request.url);\n  let response = await matchCDN(request);\n  if (!response) {\n    response = await fetch(request).catch(() => null)\n  }\n  logger.group.event(`Cache Runtime ${url.pathname}`);\n  logger.wait(`Caching url: ${request.url}`);\n  console.log(response);\n\n  if (request.method === \"GET\" && (url.protocol == \"https:\")) {\n    const cache = await caches.open(CACHE_NAME + \"-runtime\");\n    cache.put(request, response.clone()).catch(error => {\n      logger.error('[Cache Runtime] ' + (error.stack || error));\n      if (error.name === 'QuotaExceededError') {\n        caches.delete(CACHE_NAME + \"-runtime\");\n        logger.ready(\"deleted cache\")\n      }\n    })\n    logger.ready(`Cached url: ${request.url}`);\n  } else {\n    logger.warn(`Not Cached url: ${request.url}`);\n  }\n  logger.group.end();\n  return response;\n}\n\nconst matchCDN = async (req) => {\n  const nav = navigator\n  const { saveData, effectiveType } = nav.connection || nav.mozConnection || nav.webkitConnection || {}\n  if (saveData || /2g/.test(effectiveType)) {\n    logger.warn(\"Slow Network: Transparent Proxy\");\n    return fetch(req);\n  }\n  const urls = []\n  let urlObj = new URL(req.url)\n  let pathType = urlObj.pathname.split('/')[1]\n  let pathTestRes = \"\";\n\n  if (NPMMirror && new RegExp(location.origin).test(req.url)) {\n    logger.group.ready(`Match NPM Mirror: ` + req.url);\n    for (const key in cdn.npm) {\n      let url = cdn.npm[key] + \"/\" + NPMPackage + \"@\" + NPMPackageVersion + req.url.replace(location.origin, '')\n      url = fullPath(fullPath(url))\n      console.log(url);\n      urls.push(url)\n    }\n    logger.group.end()\n  }\n  if (!urls.length) {\n    for (const item of cdn_match_list) {\n      if (new RegExp(item.key).test(req.url)) {\n        pathType = item.type\n        pathTestRes = new RegExp(item.key).exec(req.url)[0]\n        break;\n      }\n    }\n    for (const type in cdn) {\n      if (type === pathType) {\n        logger.group.ready(`Match CDN ${pathType}: ` + req.url);\n        for (const key in cdn[type]) {\n          const url = cdn[type][key] + req.url.replace(pathTestRes, '')\n          console.log(url);\n          urls.push(url)\n        }\n        logger.group.end()\n      }\n    }\n  }\n\n  let res;\n  if (urls.length)\n    res = FetchEngine(urls)\n  else\n    res = fetch(req)\n  if (res && NPMMirror && new RegExp(location.origin).test(req.url)) {\n    const ext = fullPath(fullPath(req.url)).split('.').pop()\n    const contentType = getContentType(ext)\n    res = res\n      .then(res => res.arrayBuffer())\n      .then(buffer => new Response(buffer, {\n        headers: {\n          \"Content-Type\": contentType\n        }\n      }))\n      .catch(() => null)\n  }\n  return res\n}\n\nconst fullPath = (url) => {\n  url = url.split('?')[0].split('#')[0]\n  if (url.endsWith('/')) {\n    url += 'index.html'\n  } else {\n    const list = url.split('/')\n    const last = list[list.length - 1]\n    if (last.indexOf('.') === -1) {\n      url += '.html'\n    }\n  }\n  return url\n}\nasync function progress(res) {\n  return new Response(await res.arrayBuffer(), {\n    status: res.status,\n    headers: res.headers\n  })\n}\n\nfunction createPromiseAny() {\n  Promise.any = function (promises) {\n    return new Promise((resolve, reject) => {\n      promises = Array.isArray(promises) ? promises : []\n      let len = promises.length\n      let errs = []\n      if (len === 0) return reject(new AggregateError('All promises were rejected'))\n      promises.forEach((p) => {\n        if (p instanceof Promise) {\n          p.then(\n            (res) => resolve(res),\n            (err) => {\n              len--\n              errs.push(err)\n              if (len === 0) reject(new AggregateError(errs))\n            }\n          )\n        } else {\n          reject(p)\n        }\n      })\n    })\n  }\n}\n\nfunction fetchAny(reqs) {\n  const controller = new AbortController()\n\n  return reqs.map(req => {\n    return new Promise((resolve, reject) => {\n      fetch(req, {\n        signal: controller.signal\n      })\n        .then(progress)\n        .then(res => {\n          controller.abort()\n          if (res.status !== 200)\n            reject(null)\n          else\n            resolve(res)\n        })\n        .catch(() => reject(null))\n    })\n  })\n}\n\nfunction fetchParallel(reqs) {\n  const abortEvent = new Event(\"abortOtherInstance\")\n  const eventTarget = new EventTarget();\n\n  return reqs.map(async req => {\n    const controller = new AbortController();\n    let tagged = false;\n    eventTarget.addEventListener(abortEvent.type, () => {\n      if (!tagged) controller.abort();\n    })\n    return new Promise((resolve, reject) => {\n      fetch(req, {\n        signal: controller.signal,\n      }).then(res => {\n        tagged = true;\n        eventTarget.dispatchEvent(abortEvent)\n        if (res.status !== 200)\n          reject(null)\n        else\n          resolve(res)\n      }).catch(() => reject(null))\n    })\n  });\n}\n\nconst FetchEngine = (reqs) => {\n  if (!Promise.any) createPromiseAny();\n  return Promise.any(fetchParallel(reqs)).then(res => res)\n    .catch((e) => {\n      if (e == \"AggregateError: All promises were rejected\") {\n        return Promise.any(fetchAny(reqs))\n          .then((res) => res)\n          .catch(() => null);\n      }\n      return null;\n    });\n};\n\nconst getContentType = (ext) => {\n  switch (ext) {\n    case 'js':\n      return 'text/javascript'\n    case 'html':\n      return 'text/html'\n    case 'css':\n      return 'text/css'\n    case 'json':\n      return 'application/json'\n    case 'webp':\n      return 'image/webp'\n    case 'jpg':\n      return 'image/jpg'\n    case 'jpeg':\n      return 'image/jpeg'\n    case 'png':\n      return 'image/png'\n    case 'gif':\n      return 'image/gif'\n    case 'xml':\n      return 'text/xml'\n    case 'xsl':\n      return 'text/xml'\n    case 'webmanifest':\n      return 'text/webmanifest'\n    case 'map':\n      return 'application/json'\n    case 'bcmap':\n      return 'image/vnd.wap.wbmp'\n    case 'wbmp':\n      return 'image/vnd.wap.wbmp'\n    case 'bmp':\n      return 'image/bmp'\n    case 'ico':\n      return 'image/vnd.microsoft.icon'\n    case 'tiff':\n      return 'image/tiff'\n    case 'tif':\n      return 'image/tiff'\n    case 'svg':\n      return 'image/svg+xml'\n    case 'svgz':\n      return 'image/svg+xml'\n    case 'woff':\n      return 'application/font-woff'\n    case 'woff2':\n      return 'application/font-woff2'\n    case 'ttf':\n      return 'application/font-ttf'\n    case 'otf':\n      return 'application/font-otf'\n    case 'eot':\n      return 'application/vnd.ms-fontobject'\n    case 'zip':\n      return 'application/zip'\n    case 'tar':\n      return 'application/x-tar'\n    case 'gz':\n      return 'application/gzip'\n    case 'bz2':\n      return 'application/x-bzip2'\n    case 'rar':\n      return 'application/x-rar-compressed'\n    case '7z':\n      return 'application/x-7z-compressed'\n    case 'doc':\n      return 'application/msword'\n    case 'docx':\n      return 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n    case 'xls':\n      return 'application/vnd.ms-excel'\n    case 'xlsx':\n      return 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    case 'ppt':\n      return 'application/vnd.ms-powerpoint'\n    case 'pptx':\n      return 'application/vnd.openxmlformats-officedocument.presentationml.presentation'\n    case 'pdf':\n      return 'application/pdf'\n    case 'txt':\n      return 'text/plain'\n    case 'rtf':\n      return 'application/rtf'\n    case 'mp3':\n      return 'audio/mpeg'\n    case 'wav':\n      return 'audio/x-wav'\n    case 'ogg':\n      return 'audio/ogg'\n    case 'mp4':\n      return 'video/mp4'\n    case 'm4v':\n      return 'video/x-m4v'\n    case 'mov':\n      return 'video/quicktime'\n    case 'avi':\n      return 'video/x-msvideo'\n    case 'wmv':\n      return 'video/x-ms-wmv'\n    case 'flv':\n      return 'video/x-flv'\n    case 'swf':\n      return 'application/x-shockwave-flash'\n    case 'mpg':\n      return 'video/mpeg'\n    case 'mpeg':\n      return 'video/mpeg'\n    case 'mpe':\n      return 'video/mpeg'\n    case 'mpv':\n      return 'video/mpeg'\n    case 'm2v':\n      return 'video/mpeg'\n    case 'm4a':\n      return 'audio/mp4'\n    case 'aac':\n      return 'audio/aac'\n    case 'm3u':\n      return 'audio/x-mpegurl'\n    case 'm3u8':\n      return 'application/vnd.apple.mpegurl'\n    case 'pls':\n      return 'audio/x-scpls'\n    case 'cue':\n      return 'application/x-cue'\n    case 'wma':\n      return 'audio/x-ms-wma'\n    case 'flac':\n      return 'audio/flac'\n    case 'aif':\n      return 'audio/x-aiff'\n    case 'aiff':\n      return 'audio/x-aiff'\n    case 'aifc':\n      return 'audio/x-aiff'\n    case 'au':\n      return 'audio/basic'\n    case 'snd':\n      return 'audio/basic'\n    case 'mid':\n      return 'audio/midi'\n    case 'midi':\n      return 'audio/midi'\n    case 'kar':\n      return 'audio/midi'\n    default:\n      return 'text/plain'\n  }\n}\n\n"]}