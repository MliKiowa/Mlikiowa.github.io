{"version":3,"sources":["volantis-sw.js"],"names":["ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","i","_toPrimitive","_typeof","Symbol","toPrimitive","call","TypeError","String","Number","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","Array","isArray","_arrayLikeToArray","iterator","constructor","prototype","_toArray","_arrayWithHoles","_nonIterableRest","a","toString","slice","name","from","test","n","_regeneratorRuntime","hasOwnProperty","asyncIterator","u","toStringTag","c","h","Generator","create","Error","done","method","arg","delegate","d","f","sent","_sent","dispatchException","abrupt","s","type","Context","wrap","GeneratorFunction","GeneratorFunctionPrototype","l","this","p","getPrototypeOf","y","x","v","g","_invoke","AsyncIterator","resolve","__await","then","next","w","tryEntries","m","reset","isNaN","displayName","isGeneratorFunction","mark","setPrototypeOf","__proto__","awrap","async","Promise","unshift","pop","values","prev","charAt","stop","rval","complete","finish","catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","_next","_throw","prefix","cacheSuffixVersion","CACHE_NAME","PreCachlist","NPMMirror","NPMPackage","NPMPackageVersion","debug","handleFetch","_ref","_callee","event","url","_context","request","NetworkOnly","CacheFirst","CacheAlways","_x","cdn","gh","jsdelivr","fastly","gcore","testingcf","test1","combine","npm","unpkg","eleme","cdnjs","baomitu","bootcdn","bytedance","sustech","cdn_match_list","key","_console","console","color","black","red","green","yellow","blue","magenta","cyan","white","add","fi","_ref3","undefined","first","other","concat","createlog","util","fun","log","_len","args","_key2","creategroup","groupCollapsed","_len2","_key3","colorUtils","bold","str","colorHash","wait","error","warn","ready","info","createChalk","_len3","_key5","strArr","firstToUpperCase","createChalkBg","_len4","_key6","createChalkGroup","_len5","_key7","chalk","group","end","groupEnd","bg","toLowerCase","replace","L","toUpperCase","self","logger","generate_uuid","Math","random","db","read","config","reject","caches","open","cache","match","Request","encodeURIComponent","res","text","write","put","Response","compareVersion","b","v1","split","v2","len","max","num1","parseInt","num2","mirrors","getLocalVersion","_ref4","_callee2","_context2","t0","mirror_time","setNewestVersion","_ref5","_callee4","_context4","fetch","FetchEngine","json","_ref6","_callee3","_context3","version","t1","t2","t3","_x2","stack","setInterval","_callee5","_context5","setTimeout","_callee6","_context6","installFunction","_ref9","_callee8","_context8","_ref0","_callee7","index","_context7","response","_x3","addEventListener","_ref1","_callee9","_context9","skipWaiting","waitUntil","_x4","_ref10","_callee0","_context0","all","map","includes","clients","claim","_x5","_ref11","_callee1","_context1","respondWith","_x6","_ref12","_callee10","_context10","URL","pathname","_x7","_ref13","_callee11","_context11","resp","CacheRuntime","_x8","_ref14","_callee12","_context12","_x9","matchCache","_ref15","_callee13","_context13","_x0","_x1","_CacheRuntime","_callee16","_context16","matchCDN","protocol","clone","_ref16","_callee14","req","nav","_ref17","saveData","effectiveType","urls","urlObj","pathType","pathTestRes","_key8","_i","_cdn_match_list","item","_type","_key9","_url","ext","contentType","_context14","navigator","connection","mozConnection","webkitConnection","RegExp","location","origin","fullPath","exec","getContentType","arrayBuffer","buffer","headers","_x10","endsWith","list","indexOf","progress","_x11","_progress","_callee17","_context17","status","createPromiseAny","any","promises","errs","AggregateError","err","fetchAny","reqs","controller","AbortController","signal","abort","fetchParallel","abortEvent","Event","eventTarget","EventTarget","_ref18","_callee15","tagged","_context15","dispatchEvent","_x12"],"mappings":"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","file":"../volantis-sw.js","sourcesContent":["// 全站打包上传 npm，sw 并发请求 cdn\nconst prefix = 'volantis-nanaeo';\nconst cacheSuffixVersion = '00000040-::cacheSuffixVersion::';\nconst CACHE_NAME = prefix + '-v' + cacheSuffixVersion;\nconst PreCachlist = [\n  \"/css/style.css\",\n  \"/js/app.js\",\n  \"/js/search/hexo.js\",\n];\nlet NPMMirror = false;\nconst NPMPackage = \"@mlikiowa/nanaeo\";\nlet NPMPackageVersion = \"1.0.1731067262693\";\nlet debug = true;\n// location.hostname == 'localhost' && (debug = true) && (NPMMirror = false);\nconst handleFetch = async (event) => {\n  const url = event.request.url;\n  if (/nocache/.test(url)) {\n    return NetworkOnly(event)\n  } else if (/@latest/.test(url)) {\n    return CacheFirst(event)\n  } else if (/cdnjs\\.cloudflare\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/music\\.126\\.net/.test(url)) {\n    return CacheAlways(event)\n  } else if (/qqmusic\\.qq\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/jsdelivr\\.net/.test(url)) {\n    return CacheAlways(event)\n  } else if (/npm\\.elemecdn\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/unpkg\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/.*\\.(?:png|jpg|jpeg|svg|gif|webp|ico|eot|ttf|woff|woff2|mp3)$/.test(url)) {\n    return CacheAlways(event)\n  } else if (/.*\\.(css|js)$/.test(url)) {\n    return CacheAlways(event)\n  } else {\n    return CacheFirst(event)\n  }\n}\nconst cdn = {\n  gh: {\n    jsdelivr: 'https://cdn.jsdelivr.net/gh',\n    fastly: 'https://fastly.jsdelivr.net/gh',\n    gcore: 'https://gcore.jsdelivr.net/gh',\n    testingcf: 'https://testingcf.jsdelivr.net/gh',\n    test1: 'https://test1.jsdelivr.net/gh',\n  },\n  combine: {\n    jsdelivr: 'https://cdn.jsdelivr.net/combine',\n    fastly: 'https://fastly.jsdelivr.net/combine',\n    gcore: 'https://gcore.jsdelivr.net/combine',\n    testingcf: 'https://testingcf.jsdelivr.net/combine',\n    test1: 'https://test1.jsdelivr.net/combine',\n  },\n  npm: {\n    jsdelivr: 'https://cdn.jsdelivr.net/npm',\n    fastly: 'https://fastly.jsdelivr.net/npm',\n    gcore: 'https://gcore.jsdelivr.net/npm',\n    testingcf: 'https://testingcf.jsdelivr.net/npm',\n    test1: 'https://test1.jsdelivr.net/npm',\n    unpkg: 'https://unpkg.com',\n    eleme: 'https://npm.elemecdn.com',\n  },\n  cdnjs: {\n    cdnjs: 'https://cdnjs.cloudflare.com/ajax/libs',\n    baomitu: 'https://lib.baomitu.com',\n    bootcdn: 'https://cdn.bootcdn.net/ajax/libs',\n    bytedance: 'https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M',\n    sustech: 'https://mirrors.sustech.edu.cn/cdnjs/ajax/libs',\n  }\n}\nconst cdn_match_list = []\nfor (const type in cdn) {\n  for (const key in cdn[type]) {\n    cdn_match_list.push({ type: type, key: cdn[type][key] })\n  }\n}\nconst _console = console;\nconst color = {\n  black: '#000000',\n  red: '#FF0000',\n  green: '#008000',\n  yellow: '#FFFF00',\n  blue: '#0000FF',\n  magenta: '#FF00FF',\n  cyan: '#00FFFF',\n  white: '#FFFFFF',\n};\nconst add = (...arr) => {\n  let fi = [\n    []\n  ];\n  for (let key = 0; key < arr.length; key++) {\n    const [first, ...other] = arr[key];\n    fi[0] += first;\n    fi = fi.concat(other);\n  }\n  return fi;\n};\nconst createlog = (util) => (...args) => {\n  // const fun = _console[util] ? _console[util] : _console.log;\n  const fun = util == \"error\" ? _console[util] : _console.log;\n  fun.apply(void 0, args);\n};\nconst creategroup = (util) => (...args) => {\n  const fun = _console.groupCollapsed;\n  fun.apply(void 0, args);\n};\nconst colorUtils = {\n  bold: (str) => {\n    if (typeof str === 'string' || typeof str === 'number') {\n      return `${str};font-weight: bold;`;\n    }\n    for (let key = 1; key < str.length; key++) {\n      str[key] += `;font-weight: bold;`;\n    }\n    return str;\n  }\n};\nconst colorHash = {\n  log: 'black',\n  wait: 'cyan',\n  error: 'red',\n  warn: 'yellow',\n  ready: 'green',\n  info: 'blue',\n  event: 'magenta',\n};\nconst createChalk = (name) => (...str) => {\n  if (typeof str[0] === 'object') {\n    createlog(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), ...str));\n    return;\n  }\n  let strArr = str;\n  if (typeof str === 'string' || typeof str === 'number') {\n    strArr = colorUtils[colorHash[name]](str);\n  }\n  createlog(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), strArr));\n};\nconst createChalkBg = (name) => (...str) => {\n  if (typeof str[0] === 'object') {\n    createlog(name)(...add(colorUtils.bold(colorUtils[`bg${firstToUpperCase(colorHash[name])}`](`[${firstToUpperCase(name)}] `)), ...str));\n    return;\n  }\n  let strArr = str;\n  if (typeof str === 'string' || typeof str === 'number') {\n    strArr = colorUtils[colorHash[name]](str);\n  }\n  createlog(name)(...add(colorUtils.bold(colorUtils[`bg${firstToUpperCase(colorHash[name])}`](`[${firstToUpperCase(name)}] `)), strArr));\n};\nconst createChalkGroup = (name) => (...str) => {\n  if (typeof str[0] === 'object') {\n    creategroup(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), ...str));\n    return;\n  }\n  let strArr = str;\n  if (typeof str === 'string' || typeof str === 'number') {\n    strArr = colorUtils[colorHash[name]](str);\n  }\n  creategroup(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), strArr));\n};\nconst chalk = {\n  group: {\n    end: _console.groupEnd\n  },\n  bg: {}\n};\nObject.keys(colorHash).forEach(key => {\n  chalk[key] = createChalk(key);\n  chalk.group[key] = createChalkGroup(key);\n  chalk.bg[key] = createChalkBg(key);\n});\nconst firstToUpperCase = (str) => str.toLowerCase().replace(/( |^)[a-z]/g, (L) => L.toUpperCase());\nObject.keys(color).forEach(key => {\n  colorUtils[key] = (str) => {\n    if (typeof str === 'string' || typeof str === 'number') {\n      return [`%c${str}`, `color:${color[key]}`];\n    }\n    for (let i = 1; i < str.length; i++) {\n      str[i] += `;color:${color[key]}`;\n    }\n    return str;\n  };\n  colorUtils[`bg${firstToUpperCase(key)}`] = (str) => {\n    if (typeof str === 'string' || typeof str === 'number') {\n      return [`%c${str}`, `padding: 2px 4px; border-radius: 3px; color: ${key === 'white' ? '#000' : '#fff'}; font-weight: bold; background:${color[key]};`];\n    }\n    for (let i = 1; i < str.length; i++) {\n      str[i] += `;padding: 2px 4px; border-radius: 3px; font-weight: bold; background:${color[key]};`;\n    }\n    return str;\n  };\n});\nself.logger = {\n  add,\n  ...chalk,\n  ...colorUtils,\n};\n\nif (!debug) {\n  logger = {\n    log: () => { },\n    wait: () => { },\n    error: () => { },\n    warn: () => { },\n    ready: () => { },\n    info: () => { },\n    event: () => { },\n    group: {\n      log: () => { },\n      wait: () => { },\n      error: () => { },\n      warn: () => { },\n      ready: () => { },\n      info: () => { },\n      event: () => { },\n      end: () => { },\n    },\n    bg: {\n      log: () => { },\n      wait: () => { },\n      error: () => { },\n      warn: () => { },\n      ready: () => { },\n      info: () => { },\n      event: () => { },\n    }\n  };\n  console.log = () => { };\n}\n\nconst generate_uuid = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\nself.db = {\n  read: (key, config) => {\n    if (!config) { config = { type: \"text\" } }\n    return new Promise((resolve, reject) => {\n      caches.open(CACHE_NAME).then(cache => {\n        cache.match(new Request(`https://LOCALCACHE/${encodeURIComponent(key)}`)).then(function (res) {\n          if (!res) resolve(null)\n          res.text().then(text => resolve(text))\n        }).catch(() => {\n          resolve(null)\n        })\n      })\n    })\n  },\n  write: (key, value) => {\n    return new Promise((resolve, reject) => {\n      caches.open(CACHE_NAME).then(function (cache) {\n        cache.put(new Request(`https://LOCALCACHE/${encodeURIComponent(key)}`), new Response(value));\n        resolve()\n      }).catch(() => {\n        reject()\n      })\n    })\n  }\n}\nconst compareVersion = (a, b) => {\n  let v1 = a.split('.');\n  let v2 = b.split('.');\n  const len = Math.max(v1.length, v2.length);\n  while (v1.length < len) {\n    v1.push('0');\n  }\n  while (v2.length < len) {\n    v2.push('0');\n  }\n  for (let i = 0; i < len; i++) {\n    const num1 = parseInt(v1[i]);\n    const num2 = parseInt(v2[i]);\n    if (num1 > num2) {\n      return a;\n    } else if (num1 < num2) {\n      return b;\n    }\n  }\n  return a;\n}\n\nconst mirrors = [\n  `https://registry.npmjs.org/${NPMPackage}/latest`,\n  `https://registry.npmmirror.com/${NPMPackage}/latest`,\n  `https://mirrors.cloud.tencent.com/npm/${NPMPackage}/latest`\n]\nconst getLocalVersion = async () => {\n  NPMPackageVersion = await db.read('blog_version') || NPMPackageVersion\n  logger.bg.info(`Local Version: ${NPMPackage}@${NPMPackageVersion}`)\n}\nlet mirror_time = 0;\nconst setNewestVersion = async () => {\n  if (!NPMMirror) {\n    return\n  }\n  let f = null;\n  if (!(mirror_time % (mirrors.length + 1))) {\n    f = FetchEngine(mirrors);\n  } else {\n    f = fetch(mirrors[(mirror_time % (mirrors.length + 1)) - 1]);\n  }\n  mirror_time++;\n  return f\n    .then(res => res.json())\n    .then(async res => {\n      if (!res.version) throw ('No Version Found!')\n      NPMPackageVersion = compareVersion(res.version, await db.read('blog_version') || NPMPackageVersion)\n      logger.bg.ready(`${NPMPackage}@${NPMPackageVersion}`)\n      await db.write('blog_version', NPMPackageVersion)\n    })\n    .catch(error => {\n      logger.error('[Set Newest Version] ' + (error.stack || error))\n    })\n}\nsetInterval(async () => {\n  await setNewestVersion()\n}, 60 * 1000);\nsetTimeout(async () => {\n  await setNewestVersion()\n}, 5000)\nconst installFunction = async () => {\n  await getLocalVersion();\n  return caches.open(CACHE_NAME + \"-precache\")\n    .then(async function (cache) {\n      if (!await db.read('uuid')) {\n        await db.write('uuid', generate_uuid())\n      }\n      if (PreCachlist.length) {\n        logger.group.event(`Precaching ${PreCachlist.length} files.`);\n        let index = 0;\n        PreCachlist.forEach(function (url) {\n          cache.match(new Request(url)).then(function (response) {\n            if (response) {\n              logger.ready(`Precaching ${url}`);\n            } else {\n              logger.wait(`Precaching ${url}`);\n              cache.add(new Request(url));\n            }\n            index++;\n            if (index === PreCachlist.length) {\n              logger.ready(`Precached ${PreCachlist.length} files.`);\n              logger.group.end();\n            }\n          })\n        })\n      }\n    }).catch((error) => {\n      logger.error('[install] ' + (error.stack || error));\n    })\n}\nself.addEventListener('install', async function (event) {\n  logger.bg.event(\"service worker install event listening\");\n  try {\n    self.skipWaiting();\n    event.waitUntil(installFunction());\n    logger.bg.ready('service worker install sucess!');\n  } catch (error) {\n    logger.error('[install] ' + (error.stack || error));\n  }\n});\nself.addEventListener('activate', async event => {\n  logger.bg.event(\"service worker activate event listening\");\n  try {\n    event.waitUntil(\n      caches.keys().then((keys) => {\n        return Promise.all(keys.map((key) => {\n          if (!key.includes(cacheSuffixVersion)) {\n            caches.delete(key);\n            logger.bg.ready('Deleted Outdated Cache: ' + key);\n          }\n        }));\n      }).catch((error) => {\n        logger.error('[activate] ' + (error.stack || error));\n      })\n    );\n    await self.clients.claim()\n    logger.bg.ready('service worker activate sucess!');\n  } catch (error) {\n    logger.error('[activate] ' + (error.stack || error));\n  }\n})\nself.addEventListener('fetch', async event => {\n  event.respondWith(\n    handleFetch(event).catch((error) => {\n      logger.error('[fetch] ' + event.request.url + '\\n[error] ' + (error.stack || error));\n    })\n  )\n});\n\n\nconst NetworkOnly = async (event) => {\n  logger.group.info('NetworkOnly: ' + new URL(event.request.url).pathname);\n  logger.wait('service worker fetch: ' + event.request.url)\n  logger.group.end();\n  return fetch(event.request)\n}\nconst CacheFirst = async (event) => {\n  return caches.match(event.request).then(function (resp) {\n    logger.group.info('CacheFirst: ' + new URL(event.request.url).pathname);\n    logger.wait('service worker fetch: ' + event.request.url)\n    if (resp) {\n      logger.group.ready(`Cache Hit`);\n      console.log(resp)\n      logger.group.end();\n      logger.group.end();\n      event.waitUntil(CacheRuntime(event.request))\n      return resp;\n    } else {\n      logger.warn(`Cache Miss`);\n      logger.group.end();\n      return CacheRuntime(event.request)\n    }\n  })\n}\nconst CacheAlways = async (event) => {\n  return caches.match(event.request).then(function (resp) {\n    logger.group.info('CacheAlways: ' + new URL(event.request.url).pathname);\n    logger.wait('service worker fetch: ' + event.request.url)\n    if (resp) {\n      logger.group.ready(`Cache Hit`);\n      console.log(resp)\n      logger.group.end();\n      logger.group.end();\n      return resp;\n    } else {\n      logger.warn(`Cache Miss`);\n      logger.group.end();\n      return CacheRuntime(event.request)\n    }\n  })\n}\n\nconst matchCache = async (event) => {\n  return caches.match(event.request).then(function (resp) {\n    logger.group.info('service worker fetch: ' + event.request.url)\n    if (resp) {\n      logger.group.ready(`Cache Hit`);\n      console.log(resp)\n      logger.group.end();\n      logger.group.end();\n      return resp;\n    } else {\n      logger.warn(`Cache Miss`);\n      logger.group.end();\n      return CacheRuntime(event.request)\n    }\n  })\n}\nasync function CacheRuntime(request) {\n  const url = new URL(request.url);\n  let response = await matchCDN(request);\n  if (!response) {\n    response = await fetch(request).catch(() => null)\n  }\n  logger.group.event(`Cache Runtime ${url.pathname}`);\n  logger.wait(`Caching url: ${request.url}`);\n  console.log(response);\n\n  if (request.method === \"GET\" && (url.protocol == \"https:\")) {\n    const cache = await caches.open(CACHE_NAME + \"-runtime\");\n    cache.put(request, response.clone()).catch(error => {\n      logger.error('[Cache Runtime] ' + (error.stack || error));\n      if (error.name === 'QuotaExceededError') {\n        caches.delete(CACHE_NAME + \"-runtime\");\n        logger.ready(\"deleted cache\")\n      }\n    })\n    logger.ready(`Cached url: ${request.url}`);\n  } else {\n    logger.warn(`Not Cached url: ${request.url}`);\n  }\n  logger.group.end();\n  return response;\n}\n\nconst matchCDN = async (req) => {\n  const nav = navigator\n  const { saveData, effectiveType } = nav.connection || nav.mozConnection || nav.webkitConnection || {}\n  if (saveData || /2g/.test(effectiveType)) {\n    logger.warn(\"Slow Network: Transparent Proxy\");\n    return fetch(req);\n  }\n  const urls = []\n  let urlObj = new URL(req.url)\n  let pathType = urlObj.pathname.split('/')[1]\n  let pathTestRes = \"\";\n\n  if (NPMMirror && new RegExp(location.origin).test(req.url)) {\n    logger.group.ready(`Match NPM Mirror: ` + req.url);\n    for (const key in cdn.npm) {\n      let url = cdn.npm[key] + \"/\" + NPMPackage + \"@\" + NPMPackageVersion + req.url.replace(location.origin, '')\n      url = fullPath(fullPath(url))\n      console.log(url);\n      urls.push(url)\n    }\n    logger.group.end()\n  }\n  if (!urls.length) {\n    for (const item of cdn_match_list) {\n      if (new RegExp(item.key).test(req.url)) {\n        pathType = item.type\n        pathTestRes = new RegExp(item.key).exec(req.url)[0]\n        break;\n      }\n    }\n    for (const type in cdn) {\n      if (type === pathType) {\n        logger.group.ready(`Match CDN ${pathType}: ` + req.url);\n        for (const key in cdn[type]) {\n          const url = cdn[type][key] + req.url.replace(pathTestRes, '')\n          console.log(url);\n          urls.push(url)\n        }\n        logger.group.end()\n      }\n    }\n  }\n\n  let res;\n  if (urls.length)\n    res = FetchEngine(urls)\n  else\n    res = fetch(req)\n  if (res && NPMMirror && new RegExp(location.origin).test(req.url)) {\n    const ext = fullPath(fullPath(req.url)).split('.').pop()\n    const contentType = getContentType(ext)\n    res = res\n      .then(res => res.arrayBuffer())\n      .then(buffer => new Response(buffer, {\n        headers: {\n          \"Content-Type\": contentType\n        }\n      }))\n      .catch(() => null)\n  }\n  return res\n}\n\nconst fullPath = (url) => {\n  url = url.split('?')[0].split('#')[0]\n  if (url.endsWith('/')) {\n    url += 'index.html'\n  } else {\n    const list = url.split('/')\n    const last = list[list.length - 1]\n    if (last.indexOf('.') === -1) {\n      url += '.html'\n    }\n  }\n  return url\n}\nasync function progress(res) {\n  return new Response(await res.arrayBuffer(), {\n    status: res.status,\n    headers: res.headers\n  })\n}\n\nfunction createPromiseAny() {\n  Promise.any = function (promises) {\n    return new Promise((resolve, reject) => {\n      promises = Array.isArray(promises) ? promises : []\n      let len = promises.length\n      let errs = []\n      if (len === 0) return reject(new AggregateError('All promises were rejected'))\n      promises.forEach((p) => {\n        if (p instanceof Promise) {\n          p.then(\n            (res) => resolve(res),\n            (err) => {\n              len--\n              errs.push(err)\n              if (len === 0) reject(new AggregateError(errs))\n            }\n          )\n        } else {\n          reject(p)\n        }\n      })\n    })\n  }\n}\n\nfunction fetchAny(reqs) {\n  const controller = new AbortController()\n\n  return reqs.map(req => {\n    return new Promise((resolve, reject) => {\n      fetch(req, {\n        signal: controller.signal\n      })\n        .then(progress)\n        .then(res => {\n          controller.abort()\n          if (res.status !== 200)\n            reject(null)\n          else\n            resolve(res)\n        })\n        .catch(() => reject(null))\n    })\n  })\n}\n\nfunction fetchParallel(reqs) {\n  const abortEvent = new Event(\"abortOtherInstance\")\n  const eventTarget = new EventTarget();\n\n  return reqs.map(async req => {\n    const controller = new AbortController();\n    let tagged = false;\n    eventTarget.addEventListener(abortEvent.type, () => {\n      if (!tagged) controller.abort();\n    })\n    return new Promise((resolve, reject) => {\n      fetch(req, {\n        signal: controller.signal,\n      }).then(res => {\n        tagged = true;\n        eventTarget.dispatchEvent(abortEvent)\n        if (res.status !== 200)\n          reject(null)\n        else\n          resolve(res)\n      }).catch(() => reject(null))\n    })\n  });\n}\n\nconst FetchEngine = (reqs) => {\n  if (!Promise.any) createPromiseAny();\n  return Promise.any(fetchParallel(reqs)).then(res => res)\n    .catch((e) => {\n      if (e == \"AggregateError: All promises were rejected\") {\n        return Promise.any(fetchAny(reqs))\n          .then((res) => res)\n          .catch(() => null);\n      }\n      return null;\n    });\n};\n\nconst getContentType = (ext) => {\n  switch (ext) {\n    case 'js':\n      return 'text/javascript'\n    case 'html':\n      return 'text/html'\n    case 'css':\n      return 'text/css'\n    case 'json':\n      return 'application/json'\n    case 'webp':\n      return 'image/webp'\n    case 'jpg':\n      return 'image/jpg'\n    case 'jpeg':\n      return 'image/jpeg'\n    case 'png':\n      return 'image/png'\n    case 'gif':\n      return 'image/gif'\n    case 'xml':\n      return 'text/xml'\n    case 'xsl':\n      return 'text/xml'\n    case 'webmanifest':\n      return 'text/webmanifest'\n    case 'map':\n      return 'application/json'\n    case 'bcmap':\n      return 'image/vnd.wap.wbmp'\n    case 'wbmp':\n      return 'image/vnd.wap.wbmp'\n    case 'bmp':\n      return 'image/bmp'\n    case 'ico':\n      return 'image/vnd.microsoft.icon'\n    case 'tiff':\n      return 'image/tiff'\n    case 'tif':\n      return 'image/tiff'\n    case 'svg':\n      return 'image/svg+xml'\n    case 'svgz':\n      return 'image/svg+xml'\n    case 'woff':\n      return 'application/font-woff'\n    case 'woff2':\n      return 'application/font-woff2'\n    case 'ttf':\n      return 'application/font-ttf'\n    case 'otf':\n      return 'application/font-otf'\n    case 'eot':\n      return 'application/vnd.ms-fontobject'\n    case 'zip':\n      return 'application/zip'\n    case 'tar':\n      return 'application/x-tar'\n    case 'gz':\n      return 'application/gzip'\n    case 'bz2':\n      return 'application/x-bzip2'\n    case 'rar':\n      return 'application/x-rar-compressed'\n    case '7z':\n      return 'application/x-7z-compressed'\n    case 'doc':\n      return 'application/msword'\n    case 'docx':\n      return 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n    case 'xls':\n      return 'application/vnd.ms-excel'\n    case 'xlsx':\n      return 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    case 'ppt':\n      return 'application/vnd.ms-powerpoint'\n    case 'pptx':\n      return 'application/vnd.openxmlformats-officedocument.presentationml.presentation'\n    case 'pdf':\n      return 'application/pdf'\n    case 'txt':\n      return 'text/plain'\n    case 'rtf':\n      return 'application/rtf'\n    case 'mp3':\n      return 'audio/mpeg'\n    case 'wav':\n      return 'audio/x-wav'\n    case 'ogg':\n      return 'audio/ogg'\n    case 'mp4':\n      return 'video/mp4'\n    case 'm4v':\n      return 'video/x-m4v'\n    case 'mov':\n      return 'video/quicktime'\n    case 'avi':\n      return 'video/x-msvideo'\n    case 'wmv':\n      return 'video/x-ms-wmv'\n    case 'flv':\n      return 'video/x-flv'\n    case 'swf':\n      return 'application/x-shockwave-flash'\n    case 'mpg':\n      return 'video/mpeg'\n    case 'mpeg':\n      return 'video/mpeg'\n    case 'mpe':\n      return 'video/mpeg'\n    case 'mpv':\n      return 'video/mpeg'\n    case 'm2v':\n      return 'video/mpeg'\n    case 'm4a':\n      return 'audio/mp4'\n    case 'aac':\n      return 'audio/aac'\n    case 'm3u':\n      return 'audio/x-mpegurl'\n    case 'm3u8':\n      return 'application/vnd.apple.mpegurl'\n    case 'pls':\n      return 'audio/x-scpls'\n    case 'cue':\n      return 'application/x-cue'\n    case 'wma':\n      return 'audio/x-ms-wma'\n    case 'flac':\n      return 'audio/flac'\n    case 'aif':\n      return 'audio/x-aiff'\n    case 'aiff':\n      return 'audio/x-aiff'\n    case 'aifc':\n      return 'audio/x-aiff'\n    case 'au':\n      return 'audio/basic'\n    case 'snd':\n      return 'audio/basic'\n    case 'mid':\n      return 'audio/midi'\n    case 'midi':\n      return 'audio/midi'\n    case 'kar':\n      return 'audio/midi'\n    default:\n      return 'text/plain'\n  }\n}\n\n"]}